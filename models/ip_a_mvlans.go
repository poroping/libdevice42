// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IPAMvlans IP a mvlans
//
// swagger:model IPAMvlans
type IPAMvlans struct {

	// description
	Description interface{} `json:"description,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// number
	Number interface{} `json:"number,omitempty"`

	// switches
	Switches []*IPAMvlansSwitchesItems0 `json:"switches"`

	// tags
	Tags []string `json:"tags,omitempty"`

	// vlan id
	VlanID interface{} `json:"vlan_id,omitempty"`
}

// Validate validates this IP a mvlans
func (m *IPAMvlans) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSwitches(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IPAMvlans) validateSwitches(formats strfmt.Registry) error {

	if swag.IsZero(m.Switches) { // not required
		return nil
	}

	for i := 0; i < len(m.Switches); i++ {
		if swag.IsZero(m.Switches[i]) { // not required
			continue
		}

		if m.Switches[i] != nil {
			if err := m.Switches[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("switches" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *IPAMvlans) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPAMvlans) UnmarshalBinary(b []byte) error {
	var res IPAMvlans
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// IPAMvlansSwitchesItems0 IP a mvlans switches items0
//
// swagger:model IPAMvlansSwitchesItems0
type IPAMvlansSwitchesItems0 struct {

	// asset no
	AssetNo interface{} `json:"asset_no,omitempty"`

	// device id
	DeviceID interface{} `json:"device_id,omitempty"`

	// device url
	DeviceURL interface{} `json:"device_url,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// serial no
	SerialNo interface{} `json:"serial_no,omitempty"`

	// uuid
	UUID interface{} `json:"uuid,omitempty"`
}

// Validate validates this IP a mvlans switches items0
func (m *IPAMvlansSwitchesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPAMvlansSwitchesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPAMvlansSwitchesItems0) UnmarshalBinary(b []byte) error {
	var res IPAMvlansSwitchesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
