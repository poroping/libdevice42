// Code generated by go-swagger; DO NOT EDIT.

package racks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetRacksIDReader is a Reader for the GetRacksID structure.
type GetRacksIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRacksIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRacksIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRacksIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRacksIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRacksIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRacksIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetRacksIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetRacksIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRacksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRacksIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRacksIDOK creates a GetRacksIDOK with default headers values
func NewGetRacksIDOK() *GetRacksIDOK {
	return &GetRacksIDOK{}
}

/*GetRacksIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetRacksIDOK struct {
	Payload *GetRacksIDOKBody
}

func (o *GetRacksIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdOK  %+v", 200, o.Payload)
}

func (o *GetRacksIDOK) GetPayload() *GetRacksIDOKBody {
	return o.Payload
}

func (o *GetRacksIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRacksIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRacksIDBadRequest creates a GetRacksIDBadRequest with default headers values
func NewGetRacksIDBadRequest() *GetRacksIDBadRequest {
	return &GetRacksIDBadRequest{}
}

/*GetRacksIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetRacksIDBadRequest struct {
}

func (o *GetRacksIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdBadRequest ", 400)
}

func (o *GetRacksIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDUnauthorized creates a GetRacksIDUnauthorized with default headers values
func NewGetRacksIDUnauthorized() *GetRacksIDUnauthorized {
	return &GetRacksIDUnauthorized{}
}

/*GetRacksIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetRacksIDUnauthorized struct {
}

func (o *GetRacksIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdUnauthorized ", 401)
}

func (o *GetRacksIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDForbidden creates a GetRacksIDForbidden with default headers values
func NewGetRacksIDForbidden() *GetRacksIDForbidden {
	return &GetRacksIDForbidden{}
}

/*GetRacksIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetRacksIDForbidden struct {
}

func (o *GetRacksIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdForbidden ", 403)
}

func (o *GetRacksIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDNotFound creates a GetRacksIDNotFound with default headers values
func NewGetRacksIDNotFound() *GetRacksIDNotFound {
	return &GetRacksIDNotFound{}
}

/*GetRacksIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetRacksIDNotFound struct {
}

func (o *GetRacksIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdNotFound ", 404)
}

func (o *GetRacksIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDMethodNotAllowed creates a GetRacksIDMethodNotAllowed with default headers values
func NewGetRacksIDMethodNotAllowed() *GetRacksIDMethodNotAllowed {
	return &GetRacksIDMethodNotAllowed{}
}

/*GetRacksIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetRacksIDMethodNotAllowed struct {
}

func (o *GetRacksIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdMethodNotAllowed ", 405)
}

func (o *GetRacksIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDGone creates a GetRacksIDGone with default headers values
func NewGetRacksIDGone() *GetRacksIDGone {
	return &GetRacksIDGone{}
}

/*GetRacksIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetRacksIDGone struct {
}

func (o *GetRacksIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdGone ", 410)
}

func (o *GetRacksIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDInternalServerError creates a GetRacksIDInternalServerError with default headers values
func NewGetRacksIDInternalServerError() *GetRacksIDInternalServerError {
	return &GetRacksIDInternalServerError{}
}

/*GetRacksIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetRacksIDInternalServerError struct {
}

func (o *GetRacksIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdInternalServerError ", 500)
}

func (o *GetRacksIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRacksIDServiceUnavailable creates a GetRacksIDServiceUnavailable with default headers values
func NewGetRacksIDServiceUnavailable() *GetRacksIDServiceUnavailable {
	return &GetRacksIDServiceUnavailable{}
}

/*GetRacksIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetRacksIDServiceUnavailable struct {
}

func (o *GetRacksIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/racks/{ID}/][%d] getRacksIdServiceUnavailable ", 503)
}

func (o *GetRacksIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CustomFieldsItems0 custom fields items0
swagger:model CustomFieldsItems0
*/
type CustomFieldsItems0 struct {

	// key
	Key interface{} `json:"key,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// value
	Value interface{} `json:"value,omitempty"`
}

// Validate validates this custom fields items0
func (o *CustomFieldsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CustomFieldsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomFieldsItems0) UnmarshalBinary(b []byte) error {
	var res CustomFieldsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetRacksIDOKBody get racks ID o k body
swagger:model GetRacksIDOKBody
*/
type GetRacksIDOKBody struct {

	// asset no
	AssetNo interface{} `json:"asset_no,omitempty"`

	// assets
	Assets interface{} `json:"assets,omitempty"`

	// available u
	Availableu interface{} `json:"available_u,omitempty"`

	// building
	Building interface{} `json:"building,omitempty"`

	// custom fields
	CustomFields []*CustomFieldsItems0 `json:"custom_fields"`

	// devices
	Devices []*models.RackDevices `json:"devices"`

	// first number
	FirstNumber interface{} `json:"first_number,omitempty"`

	// manufacturer
	Manufacturer interface{} `json:"manufacturer,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// number between us
	NumberBetweenUs interface{} `json:"number_between_us,omitempty"`

	// numbering start from bottom
	NumberingStartFromBottom interface{} `json:"numbering_start_from_bottom,omitempty"`

	// pdus
	Pdus []*PdusItems0 `json:"pdus"`

	// rack id
	RackID interface{} `json:"rack_id,omitempty"`

	// rack middle option
	RackMiddleOption interface{} `json:"rack_middle_option,omitempty"`

	// rack url
	RackURL interface{} `json:"rack_url,omitempty"`

	// room
	Room interface{} `json:"room,omitempty"`

	// row
	Row interface{} `json:"row,omitempty"`

	// row size
	RowSize interface{} `json:"row_size,omitempty"`

	// size
	Size interface{} `json:"size,omitempty"`

	// start col
	StartCol interface{} `json:"start_col,omitempty"`

	// start row
	StartRow interface{} `json:"start_row,omitempty"`

	// tags
	Tags interface{} `json:"tags,omitempty"`
}

// Validate validates this get racks ID o k body
func (o *GetRacksIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomFields(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDevices(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePdus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRacksIDOKBody) validateCustomFields(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomFields) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomFields); i++ {
		if swag.IsZero(o.CustomFields[i]) { // not required
			continue
		}

		if o.CustomFields[i] != nil {
			if err := o.CustomFields[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRacksIdOK" + "." + "custom_fields" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetRacksIDOKBody) validateDevices(formats strfmt.Registry) error {

	if swag.IsZero(o.Devices) { // not required
		return nil
	}

	for i := 0; i < len(o.Devices); i++ {
		if swag.IsZero(o.Devices[i]) { // not required
			continue
		}

		if o.Devices[i] != nil {
			if err := o.Devices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRacksIdOK" + "." + "devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetRacksIDOKBody) validatePdus(formats strfmt.Registry) error {

	if swag.IsZero(o.Pdus) { // not required
		return nil
	}

	for i := 0; i < len(o.Pdus); i++ {
		if swag.IsZero(o.Pdus[i]) { // not required
			continue
		}

		if o.Pdus[i] != nil {
			if err := o.Pdus[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRacksIdOK" + "." + "pdus" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRacksIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRacksIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetRacksIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PdusItems0 pdus items0
swagger:model PdusItems0
*/
type PdusItems0 struct {

	// bootstrap power
	BootstrapPower interface{} `json:"bootstrap_power,omitempty"`

	// depth
	Depth interface{} `json:"depth,omitempty"`

	// file names
	FileNames interface{} `json:"file_names,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// num ports
	NumPorts interface{} `json:"num_ports,omitempty"`

	// orientation
	Orientation interface{} `json:"orientation,omitempty"`

	// pdu id
	PduID interface{} `json:"pdu_id,omitempty"`

	// power draw
	PowerDraw interface{} `json:"power_draw,omitempty"`

	// reversed
	Reversed interface{} `json:"reversed,omitempty"`

	// size
	Size interface{} `json:"size,omitempty"`

	// start at
	StartAt interface{} `json:"start_at,omitempty"`

	// total ports
	TotalPorts interface{} `json:"total_ports,omitempty"`

	// where
	Where interface{} `json:"where,omitempty"`

	// width
	Width interface{} `json:"width,omitempty"`

	// xpos
	Xpos interface{} `json:"xpos,omitempty"`
}

// Validate validates this pdus items0
func (o *PdusItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PdusItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PdusItems0) UnmarshalBinary(b []byte) error {
	var res PdusItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
