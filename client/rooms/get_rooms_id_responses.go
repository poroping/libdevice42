// Code generated by go-swagger; DO NOT EDIT.

package rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetRoomsIDReader is a Reader for the GetRoomsID structure.
type GetRoomsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRoomsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRoomsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRoomsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRoomsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRoomsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRoomsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetRoomsIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetRoomsIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRoomsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetRoomsIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRoomsIDOK creates a GetRoomsIDOK with default headers values
func NewGetRoomsIDOK() *GetRoomsIDOK {
	return &GetRoomsIDOK{}
}

/*GetRoomsIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetRoomsIDOK struct {
	Payload *GetRoomsIDOKBody
}

func (o *GetRoomsIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdOK  %+v", 200, o.Payload)
}

func (o *GetRoomsIDOK) GetPayload() *GetRoomsIDOKBody {
	return o.Payload
}

func (o *GetRoomsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRoomsIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRoomsIDBadRequest creates a GetRoomsIDBadRequest with default headers values
func NewGetRoomsIDBadRequest() *GetRoomsIDBadRequest {
	return &GetRoomsIDBadRequest{}
}

/*GetRoomsIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetRoomsIDBadRequest struct {
}

func (o *GetRoomsIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdBadRequest ", 400)
}

func (o *GetRoomsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDUnauthorized creates a GetRoomsIDUnauthorized with default headers values
func NewGetRoomsIDUnauthorized() *GetRoomsIDUnauthorized {
	return &GetRoomsIDUnauthorized{}
}

/*GetRoomsIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetRoomsIDUnauthorized struct {
}

func (o *GetRoomsIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdUnauthorized ", 401)
}

func (o *GetRoomsIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDForbidden creates a GetRoomsIDForbidden with default headers values
func NewGetRoomsIDForbidden() *GetRoomsIDForbidden {
	return &GetRoomsIDForbidden{}
}

/*GetRoomsIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetRoomsIDForbidden struct {
}

func (o *GetRoomsIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdForbidden ", 403)
}

func (o *GetRoomsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDNotFound creates a GetRoomsIDNotFound with default headers values
func NewGetRoomsIDNotFound() *GetRoomsIDNotFound {
	return &GetRoomsIDNotFound{}
}

/*GetRoomsIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetRoomsIDNotFound struct {
}

func (o *GetRoomsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdNotFound ", 404)
}

func (o *GetRoomsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDMethodNotAllowed creates a GetRoomsIDMethodNotAllowed with default headers values
func NewGetRoomsIDMethodNotAllowed() *GetRoomsIDMethodNotAllowed {
	return &GetRoomsIDMethodNotAllowed{}
}

/*GetRoomsIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetRoomsIDMethodNotAllowed struct {
}

func (o *GetRoomsIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdMethodNotAllowed ", 405)
}

func (o *GetRoomsIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDGone creates a GetRoomsIDGone with default headers values
func NewGetRoomsIDGone() *GetRoomsIDGone {
	return &GetRoomsIDGone{}
}

/*GetRoomsIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetRoomsIDGone struct {
}

func (o *GetRoomsIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdGone ", 410)
}

func (o *GetRoomsIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDInternalServerError creates a GetRoomsIDInternalServerError with default headers values
func NewGetRoomsIDInternalServerError() *GetRoomsIDInternalServerError {
	return &GetRoomsIDInternalServerError{}
}

/*GetRoomsIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetRoomsIDInternalServerError struct {
}

func (o *GetRoomsIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdInternalServerError ", 500)
}

func (o *GetRoomsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRoomsIDServiceUnavailable creates a GetRoomsIDServiceUnavailable with default headers values
func NewGetRoomsIDServiceUnavailable() *GetRoomsIDServiceUnavailable {
	return &GetRoomsIDServiceUnavailable{}
}

/*GetRoomsIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetRoomsIDServiceUnavailable struct {
}

func (o *GetRoomsIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/rooms/{ID}/][%d] getRoomsIdServiceUnavailable ", 503)
}

func (o *GetRoomsIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*AssetsItems0 assets items0
swagger:model AssetsItems0
*/
type AssetsItems0 struct {

	// asset id
	AssetID interface{} `json:"asset_id,omitempty"`

	// asset no
	AssetNo interface{} `json:"asset_no,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// serial no
	SerialNo interface{} `json:"serial_no,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this assets items0
func (o *AssetsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AssetsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AssetsItems0) UnmarshalBinary(b []byte) error {
	var res AssetsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DevicesItems0 devices items0
swagger:model DevicesItems0
*/
type DevicesItems0 struct {

	// device
	Device *DevicesItems0Device `json:"device,omitempty"`
}

// Validate validates this devices items0
func (o *DevicesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDevice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DevicesItems0) validateDevice(formats strfmt.Registry) error {

	if swag.IsZero(o.Device) { // not required
		return nil
	}

	if o.Device != nil {
		if err := o.Device.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("device")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DevicesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DevicesItems0) UnmarshalBinary(b []byte) error {
	var res DevicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DevicesItems0Device devices items0 device
swagger:model DevicesItems0Device
*/
type DevicesItems0Device struct {

	// asset no
	AssetNo interface{} `json:"asset_no,omitempty"`

	// device id
	DeviceID interface{} `json:"device_id,omitempty"`

	// device url
	DeviceURL interface{} `json:"device_url,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// serial no
	SerialNo interface{} `json:"serial_no,omitempty"`

	// type
	Type interface{} `json:"type,omitempty"`

	// uuid
	UUID interface{} `json:"uuid,omitempty"`
}

// Validate validates this devices items0 device
func (o *DevicesItems0Device) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DevicesItems0Device) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DevicesItems0Device) UnmarshalBinary(b []byte) error {
	var res DevicesItems0Device
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetRoomsIDOKBody get rooms ID o k body
swagger:model GetRoomsIDOKBody
*/
type GetRoomsIDOKBody struct {

	// assets
	Assets []*AssetsItems0 `json:"assets"`

	// building
	Building interface{} `json:"building,omitempty"`

	// building id
	BuildingID interface{} `json:"building_id,omitempty"`

	// devices
	Devices []*DevicesItems0 `json:"devices"`

	// grid cols
	GridCols interface{} `json:"grid_cols,omitempty"`

	// grid rows
	GridRows interface{} `json:"grid_rows,omitempty"`

	// name
	Name interface{} `json:"name,omitempty"`

	// notes
	Notes interface{} `json:"notes,omitempty"`

	// racks
	Racks []*models.RoomsRacks `json:"racks"`

	// reverse xaxis
	ReverseXaxis interface{} `json:"reverse_xaxis,omitempty"`

	// reverse yaxis
	ReverseYaxis interface{} `json:"reverse_yaxis,omitempty"`

	// room id
	RoomID interface{} `json:"room_id,omitempty"`
}

// Validate validates this get rooms ID o k body
func (o *GetRoomsIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAssets(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDevices(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRacks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRoomsIDOKBody) validateAssets(formats strfmt.Registry) error {

	if swag.IsZero(o.Assets) { // not required
		return nil
	}

	for i := 0; i < len(o.Assets); i++ {
		if swag.IsZero(o.Assets[i]) { // not required
			continue
		}

		if o.Assets[i] != nil {
			if err := o.Assets[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRoomsIdOK" + "." + "assets" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetRoomsIDOKBody) validateDevices(formats strfmt.Registry) error {

	if swag.IsZero(o.Devices) { // not required
		return nil
	}

	for i := 0; i < len(o.Devices); i++ {
		if swag.IsZero(o.Devices[i]) { // not required
			continue
		}

		if o.Devices[i] != nil {
			if err := o.Devices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRoomsIdOK" + "." + "devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetRoomsIDOKBody) validateRacks(formats strfmt.Registry) error {

	if swag.IsZero(o.Racks) { // not required
		return nil
	}

	for i := 0; i < len(o.Racks); i++ {
		if swag.IsZero(o.Racks[i]) { // not required
			continue
		}

		if o.Racks[i] != nil {
			if err := o.Racks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getRoomsIdOK" + "." + "racks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetRoomsIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRoomsIDOKBody) UnmarshalBinary(b []byte) error {
	var res GetRoomsIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
