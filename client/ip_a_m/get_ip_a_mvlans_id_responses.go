// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetIPAMvlansIDReader is a Reader for the GetIPAMvlansID structure.
type GetIPAMvlansIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMvlansIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMvlansIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMvlansIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMvlansIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMvlansIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMvlansIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMvlansIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMvlansIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMvlansIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMvlansIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMvlansIDOK creates a GetIPAMvlansIDOK with default headers values
func NewGetIPAMvlansIDOK() *GetIPAMvlansIDOK {
	return &GetIPAMvlansIDOK{}
}

/*GetIPAMvlansIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMvlansIDOK struct {
	Payload *models.IPAMvlans
}

func (o *GetIPAMvlansIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdOK  %+v", 200, o.Payload)
}

func (o *GetIPAMvlansIDOK) GetPayload() *models.IPAMvlans {
	return o.Payload
}

func (o *GetIPAMvlansIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPAMvlans)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMvlansIDBadRequest creates a GetIPAMvlansIDBadRequest with default headers values
func NewGetIPAMvlansIDBadRequest() *GetIPAMvlansIDBadRequest {
	return &GetIPAMvlansIDBadRequest{}
}

/*GetIPAMvlansIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMvlansIDBadRequest struct {
}

func (o *GetIPAMvlansIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdBadRequest ", 400)
}

func (o *GetIPAMvlansIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDUnauthorized creates a GetIPAMvlansIDUnauthorized with default headers values
func NewGetIPAMvlansIDUnauthorized() *GetIPAMvlansIDUnauthorized {
	return &GetIPAMvlansIDUnauthorized{}
}

/*GetIPAMvlansIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMvlansIDUnauthorized struct {
}

func (o *GetIPAMvlansIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdUnauthorized ", 401)
}

func (o *GetIPAMvlansIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDForbidden creates a GetIPAMvlansIDForbidden with default headers values
func NewGetIPAMvlansIDForbidden() *GetIPAMvlansIDForbidden {
	return &GetIPAMvlansIDForbidden{}
}

/*GetIPAMvlansIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMvlansIDForbidden struct {
}

func (o *GetIPAMvlansIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdForbidden ", 403)
}

func (o *GetIPAMvlansIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDNotFound creates a GetIPAMvlansIDNotFound with default headers values
func NewGetIPAMvlansIDNotFound() *GetIPAMvlansIDNotFound {
	return &GetIPAMvlansIDNotFound{}
}

/*GetIPAMvlansIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMvlansIDNotFound struct {
}

func (o *GetIPAMvlansIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdNotFound ", 404)
}

func (o *GetIPAMvlansIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDMethodNotAllowed creates a GetIPAMvlansIDMethodNotAllowed with default headers values
func NewGetIPAMvlansIDMethodNotAllowed() *GetIPAMvlansIDMethodNotAllowed {
	return &GetIPAMvlansIDMethodNotAllowed{}
}

/*GetIPAMvlansIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMvlansIDMethodNotAllowed struct {
}

func (o *GetIPAMvlansIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdMethodNotAllowed ", 405)
}

func (o *GetIPAMvlansIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDGone creates a GetIPAMvlansIDGone with default headers values
func NewGetIPAMvlansIDGone() *GetIPAMvlansIDGone {
	return &GetIPAMvlansIDGone{}
}

/*GetIPAMvlansIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMvlansIDGone struct {
}

func (o *GetIPAMvlansIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdGone ", 410)
}

func (o *GetIPAMvlansIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDInternalServerError creates a GetIPAMvlansIDInternalServerError with default headers values
func NewGetIPAMvlansIDInternalServerError() *GetIPAMvlansIDInternalServerError {
	return &GetIPAMvlansIDInternalServerError{}
}

/*GetIPAMvlansIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMvlansIDInternalServerError struct {
}

func (o *GetIPAMvlansIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdInternalServerError ", 500)
}

func (o *GetIPAMvlansIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMvlansIDServiceUnavailable creates a GetIPAMvlansIDServiceUnavailable with default headers values
func NewGetIPAMvlansIDServiceUnavailable() *GetIPAMvlansIDServiceUnavailable {
	return &GetIPAMvlansIDServiceUnavailable{}
}

/*GetIPAMvlansIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMvlansIDServiceUnavailable struct {
}

func (o *GetIPAMvlansIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vlans/{id}/][%d] getIpAMvlansIdServiceUnavailable ", 503)
}

func (o *GetIPAMvlansIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
