// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetIPAMSubnetIDReader is a Reader for the GetIPAMSubnetID structure.
type GetIPAMSubnetIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMSubnetIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMSubnetIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMSubnetIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMSubnetIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMSubnetIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMSubnetIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMSubnetIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMSubnetIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMSubnetIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMSubnetIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMSubnetIDOK creates a GetIPAMSubnetIDOK with default headers values
func NewGetIPAMSubnetIDOK() *GetIPAMSubnetIDOK {
	return &GetIPAMSubnetIDOK{}
}

/*GetIPAMSubnetIDOK handles this case with default header values.

The above command returns the same output as Get All Subnets above
*/
type GetIPAMSubnetIDOK struct {
	Payload *models.IPAMsubnets
}

func (o *GetIPAMSubnetIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdOK  %+v", 200, o.Payload)
}

func (o *GetIPAMSubnetIDOK) GetPayload() *models.IPAMsubnets {
	return o.Payload
}

func (o *GetIPAMSubnetIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPAMsubnets)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMSubnetIDBadRequest creates a GetIPAMSubnetIDBadRequest with default headers values
func NewGetIPAMSubnetIDBadRequest() *GetIPAMSubnetIDBadRequest {
	return &GetIPAMSubnetIDBadRequest{}
}

/*GetIPAMSubnetIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMSubnetIDBadRequest struct {
}

func (o *GetIPAMSubnetIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdBadRequest ", 400)
}

func (o *GetIPAMSubnetIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDUnauthorized creates a GetIPAMSubnetIDUnauthorized with default headers values
func NewGetIPAMSubnetIDUnauthorized() *GetIPAMSubnetIDUnauthorized {
	return &GetIPAMSubnetIDUnauthorized{}
}

/*GetIPAMSubnetIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMSubnetIDUnauthorized struct {
}

func (o *GetIPAMSubnetIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdUnauthorized ", 401)
}

func (o *GetIPAMSubnetIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDForbidden creates a GetIPAMSubnetIDForbidden with default headers values
func NewGetIPAMSubnetIDForbidden() *GetIPAMSubnetIDForbidden {
	return &GetIPAMSubnetIDForbidden{}
}

/*GetIPAMSubnetIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMSubnetIDForbidden struct {
}

func (o *GetIPAMSubnetIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdForbidden ", 403)
}

func (o *GetIPAMSubnetIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDNotFound creates a GetIPAMSubnetIDNotFound with default headers values
func NewGetIPAMSubnetIDNotFound() *GetIPAMSubnetIDNotFound {
	return &GetIPAMSubnetIDNotFound{}
}

/*GetIPAMSubnetIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMSubnetIDNotFound struct {
}

func (o *GetIPAMSubnetIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdNotFound ", 404)
}

func (o *GetIPAMSubnetIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDMethodNotAllowed creates a GetIPAMSubnetIDMethodNotAllowed with default headers values
func NewGetIPAMSubnetIDMethodNotAllowed() *GetIPAMSubnetIDMethodNotAllowed {
	return &GetIPAMSubnetIDMethodNotAllowed{}
}

/*GetIPAMSubnetIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMSubnetIDMethodNotAllowed struct {
}

func (o *GetIPAMSubnetIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdMethodNotAllowed ", 405)
}

func (o *GetIPAMSubnetIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDGone creates a GetIPAMSubnetIDGone with default headers values
func NewGetIPAMSubnetIDGone() *GetIPAMSubnetIDGone {
	return &GetIPAMSubnetIDGone{}
}

/*GetIPAMSubnetIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMSubnetIDGone struct {
}

func (o *GetIPAMSubnetIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdGone ", 410)
}

func (o *GetIPAMSubnetIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDInternalServerError creates a GetIPAMSubnetIDInternalServerError with default headers values
func NewGetIPAMSubnetIDInternalServerError() *GetIPAMSubnetIDInternalServerError {
	return &GetIPAMSubnetIDInternalServerError{}
}

/*GetIPAMSubnetIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMSubnetIDInternalServerError struct {
}

func (o *GetIPAMSubnetIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdInternalServerError ", 500)
}

func (o *GetIPAMSubnetIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSubnetIDServiceUnavailable creates a GetIPAMSubnetIDServiceUnavailable with default headers values
func NewGetIPAMSubnetIDServiceUnavailable() *GetIPAMSubnetIDServiceUnavailable {
	return &GetIPAMSubnetIDServiceUnavailable{}
}

/*GetIPAMSubnetIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMSubnetIDServiceUnavailable struct {
}

func (o *GetIPAMSubnetIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/subnets/{subnet_id}/][%d] getIpAMSubnetIdServiceUnavailable ", 503)
}

func (o *GetIPAMSubnetIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
