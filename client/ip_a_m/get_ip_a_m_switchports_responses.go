// Code generated by go-swagger; DO NOT EDIT.

package ip_a_m

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetIPAMSwitchportsReader is a Reader for the GetIPAMSwitchports structure.
type GetIPAMSwitchportsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIPAMSwitchportsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIPAMSwitchportsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIPAMSwitchportsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIPAMSwitchportsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIPAMSwitchportsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIPAMSwitchportsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetIPAMSwitchportsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetIPAMSwitchportsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIPAMSwitchportsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetIPAMSwitchportsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIPAMSwitchportsOK creates a GetIPAMSwitchportsOK with default headers values
func NewGetIPAMSwitchportsOK() *GetIPAMSwitchportsOK {
	return &GetIPAMSwitchportsOK{}
}

/*GetIPAMSwitchportsOK handles this case with default header values.

The above command returns results like this:
*/
type GetIPAMSwitchportsOK struct {
	Payload *GetIPAMSwitchportsOKBody
}

func (o *GetIPAMSwitchportsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsOK  %+v", 200, o.Payload)
}

func (o *GetIPAMSwitchportsOK) GetPayload() *GetIPAMSwitchportsOKBody {
	return o.Payload
}

func (o *GetIPAMSwitchportsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetIPAMSwitchportsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIPAMSwitchportsBadRequest creates a GetIPAMSwitchportsBadRequest with default headers values
func NewGetIPAMSwitchportsBadRequest() *GetIPAMSwitchportsBadRequest {
	return &GetIPAMSwitchportsBadRequest{}
}

/*GetIPAMSwitchportsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetIPAMSwitchportsBadRequest struct {
}

func (o *GetIPAMSwitchportsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsBadRequest ", 400)
}

func (o *GetIPAMSwitchportsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsUnauthorized creates a GetIPAMSwitchportsUnauthorized with default headers values
func NewGetIPAMSwitchportsUnauthorized() *GetIPAMSwitchportsUnauthorized {
	return &GetIPAMSwitchportsUnauthorized{}
}

/*GetIPAMSwitchportsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetIPAMSwitchportsUnauthorized struct {
}

func (o *GetIPAMSwitchportsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsUnauthorized ", 401)
}

func (o *GetIPAMSwitchportsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsForbidden creates a GetIPAMSwitchportsForbidden with default headers values
func NewGetIPAMSwitchportsForbidden() *GetIPAMSwitchportsForbidden {
	return &GetIPAMSwitchportsForbidden{}
}

/*GetIPAMSwitchportsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetIPAMSwitchportsForbidden struct {
}

func (o *GetIPAMSwitchportsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsForbidden ", 403)
}

func (o *GetIPAMSwitchportsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsNotFound creates a GetIPAMSwitchportsNotFound with default headers values
func NewGetIPAMSwitchportsNotFound() *GetIPAMSwitchportsNotFound {
	return &GetIPAMSwitchportsNotFound{}
}

/*GetIPAMSwitchportsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetIPAMSwitchportsNotFound struct {
}

func (o *GetIPAMSwitchportsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsNotFound ", 404)
}

func (o *GetIPAMSwitchportsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsMethodNotAllowed creates a GetIPAMSwitchportsMethodNotAllowed with default headers values
func NewGetIPAMSwitchportsMethodNotAllowed() *GetIPAMSwitchportsMethodNotAllowed {
	return &GetIPAMSwitchportsMethodNotAllowed{}
}

/*GetIPAMSwitchportsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetIPAMSwitchportsMethodNotAllowed struct {
}

func (o *GetIPAMSwitchportsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsMethodNotAllowed ", 405)
}

func (o *GetIPAMSwitchportsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsGone creates a GetIPAMSwitchportsGone with default headers values
func NewGetIPAMSwitchportsGone() *GetIPAMSwitchportsGone {
	return &GetIPAMSwitchportsGone{}
}

/*GetIPAMSwitchportsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetIPAMSwitchportsGone struct {
}

func (o *GetIPAMSwitchportsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsGone ", 410)
}

func (o *GetIPAMSwitchportsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsInternalServerError creates a GetIPAMSwitchportsInternalServerError with default headers values
func NewGetIPAMSwitchportsInternalServerError() *GetIPAMSwitchportsInternalServerError {
	return &GetIPAMSwitchportsInternalServerError{}
}

/*GetIPAMSwitchportsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetIPAMSwitchportsInternalServerError struct {
}

func (o *GetIPAMSwitchportsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsInternalServerError ", 500)
}

func (o *GetIPAMSwitchportsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIPAMSwitchportsServiceUnavailable creates a GetIPAMSwitchportsServiceUnavailable with default headers values
func NewGetIPAMSwitchportsServiceUnavailable() *GetIPAMSwitchportsServiceUnavailable {
	return &GetIPAMSwitchportsServiceUnavailable{}
}

/*GetIPAMSwitchportsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetIPAMSwitchportsServiceUnavailable struct {
}

func (o *GetIPAMSwitchportsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/switchports][%d] getIpAMSwitchportsServiceUnavailable ", 503)
}

func (o *GetIPAMSwitchportsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetIPAMSwitchportsOKBody get IP a m switchports o k body
swagger:model GetIPAMSwitchportsOKBody
*/
type GetIPAMSwitchportsOKBody struct {

	// limit
	Limit interface{} `json:"limit,omitempty"`

	// offset
	Offset interface{} `json:"offset,omitempty"`

	// switchports
	Switchports []*models.IPAMmacsPort `json:"switchports"`

	// total count
	TotalCount interface{} `json:"total_count,omitempty"`
}

// Validate validates this get IP a m switchports o k body
func (o *GetIPAMSwitchportsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSwitchports(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetIPAMSwitchportsOKBody) validateSwitchports(formats strfmt.Registry) error {

	if swag.IsZero(o.Switchports) { // not required
		return nil
	}

	for i := 0; i < len(o.Switchports); i++ {
		if swag.IsZero(o.Switchports[i]) { // not required
			continue
		}

		if o.Switchports[i] != nil {
			if err := o.Switchports[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getIpAMSwitchportsOK" + "." + "switchports" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetIPAMSwitchportsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetIPAMSwitchportsOKBody) UnmarshalBinary(b []byte) error {
	var res GetIPAMSwitchportsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
