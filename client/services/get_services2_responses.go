// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetServices2Reader is a Reader for the GetServices2 structure.
type GetServices2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServices2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServices2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServices2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServices2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServices2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServices2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServices2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetServices2Gone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServices2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetServices2ServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServices2OK creates a GetServices2OK with default headers values
func NewGetServices2OK() *GetServices2OK {
	return &GetServices2OK{}
}

/*GetServices2OK handles this case with default header values.

The above command returns results like this:
*/
type GetServices2OK struct {
	Payload *GetServices2OKBody
}

func (o *GetServices2OK) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2OK  %+v", 200, o.Payload)
}

func (o *GetServices2OK) GetPayload() *GetServices2OKBody {
	return o.Payload
}

func (o *GetServices2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetServices2OKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServices2BadRequest creates a GetServices2BadRequest with default headers values
func NewGetServices2BadRequest() *GetServices2BadRequest {
	return &GetServices2BadRequest{}
}

/*GetServices2BadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetServices2BadRequest struct {
}

func (o *GetServices2BadRequest) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2BadRequest ", 400)
}

func (o *GetServices2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2Unauthorized creates a GetServices2Unauthorized with default headers values
func NewGetServices2Unauthorized() *GetServices2Unauthorized {
	return &GetServices2Unauthorized{}
}

/*GetServices2Unauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetServices2Unauthorized struct {
}

func (o *GetServices2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2Unauthorized ", 401)
}

func (o *GetServices2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2Forbidden creates a GetServices2Forbidden with default headers values
func NewGetServices2Forbidden() *GetServices2Forbidden {
	return &GetServices2Forbidden{}
}

/*GetServices2Forbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetServices2Forbidden struct {
}

func (o *GetServices2Forbidden) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2Forbidden ", 403)
}

func (o *GetServices2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2NotFound creates a GetServices2NotFound with default headers values
func NewGetServices2NotFound() *GetServices2NotFound {
	return &GetServices2NotFound{}
}

/*GetServices2NotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetServices2NotFound struct {
}

func (o *GetServices2NotFound) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2NotFound ", 404)
}

func (o *GetServices2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2MethodNotAllowed creates a GetServices2MethodNotAllowed with default headers values
func NewGetServices2MethodNotAllowed() *GetServices2MethodNotAllowed {
	return &GetServices2MethodNotAllowed{}
}

/*GetServices2MethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetServices2MethodNotAllowed struct {
}

func (o *GetServices2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2MethodNotAllowed ", 405)
}

func (o *GetServices2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2Gone creates a GetServices2Gone with default headers values
func NewGetServices2Gone() *GetServices2Gone {
	return &GetServices2Gone{}
}

/*GetServices2Gone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetServices2Gone struct {
}

func (o *GetServices2Gone) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2Gone ", 410)
}

func (o *GetServices2Gone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2InternalServerError creates a GetServices2InternalServerError with default headers values
func NewGetServices2InternalServerError() *GetServices2InternalServerError {
	return &GetServices2InternalServerError{}
}

/*GetServices2InternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetServices2InternalServerError struct {
}

func (o *GetServices2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2InternalServerError ", 500)
}

func (o *GetServices2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServices2ServiceUnavailable creates a GetServices2ServiceUnavailable with default headers values
func NewGetServices2ServiceUnavailable() *GetServices2ServiceUnavailable {
	return &GetServices2ServiceUnavailable{}
}

/*GetServices2ServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetServices2ServiceUnavailable struct {
}

func (o *GetServices2ServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/2.0/services/][%d] getServices2ServiceUnavailable ", 503)
}

func (o *GetServices2ServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetServices2OKBody get services2 o k body
swagger:model GetServices2OKBody
*/
type GetServices2OKBody struct {

	// limit
	Limit interface{} `json:"limit,omitempty"`

	// offset
	Offset interface{} `json:"offset,omitempty"`

	// services
	Services models.Services `json:"services"`

	// total count
	TotalCount interface{} `json:"total_count,omitempty"`
}

// Validate validates this get services2 o k body
func (o *GetServices2OKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateServices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetServices2OKBody) validateServices(formats strfmt.Registry) error {

	if swag.IsZero(o.Services) { // not required
		return nil
	}

	if err := o.Services.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("getServices2OK" + "." + "services")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetServices2OKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetServices2OKBody) UnmarshalBinary(b []byte) error {
	var res GetServices2OKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
