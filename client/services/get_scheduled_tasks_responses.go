// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetScheduledTasksReader is a Reader for the GetScheduledTasks structure.
type GetScheduledTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScheduledTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScheduledTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetScheduledTasksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetScheduledTasksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScheduledTasksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScheduledTasksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetScheduledTasksMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetScheduledTasksGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetScheduledTasksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetScheduledTasksServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetScheduledTasksOK creates a GetScheduledTasksOK with default headers values
func NewGetScheduledTasksOK() *GetScheduledTasksOK {
	return &GetScheduledTasksOK{}
}

/*GetScheduledTasksOK handles this case with default header values.

The above command returns results like this:
*/
type GetScheduledTasksOK struct {
	Payload *GetScheduledTasksOKBody
}

func (o *GetScheduledTasksOK) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksOK  %+v", 200, o.Payload)
}

func (o *GetScheduledTasksOK) GetPayload() *GetScheduledTasksOKBody {
	return o.Payload
}

func (o *GetScheduledTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetScheduledTasksOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScheduledTasksBadRequest creates a GetScheduledTasksBadRequest with default headers values
func NewGetScheduledTasksBadRequest() *GetScheduledTasksBadRequest {
	return &GetScheduledTasksBadRequest{}
}

/*GetScheduledTasksBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetScheduledTasksBadRequest struct {
}

func (o *GetScheduledTasksBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksBadRequest ", 400)
}

func (o *GetScheduledTasksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksUnauthorized creates a GetScheduledTasksUnauthorized with default headers values
func NewGetScheduledTasksUnauthorized() *GetScheduledTasksUnauthorized {
	return &GetScheduledTasksUnauthorized{}
}

/*GetScheduledTasksUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetScheduledTasksUnauthorized struct {
}

func (o *GetScheduledTasksUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksUnauthorized ", 401)
}

func (o *GetScheduledTasksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksForbidden creates a GetScheduledTasksForbidden with default headers values
func NewGetScheduledTasksForbidden() *GetScheduledTasksForbidden {
	return &GetScheduledTasksForbidden{}
}

/*GetScheduledTasksForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetScheduledTasksForbidden struct {
}

func (o *GetScheduledTasksForbidden) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksForbidden ", 403)
}

func (o *GetScheduledTasksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksNotFound creates a GetScheduledTasksNotFound with default headers values
func NewGetScheduledTasksNotFound() *GetScheduledTasksNotFound {
	return &GetScheduledTasksNotFound{}
}

/*GetScheduledTasksNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetScheduledTasksNotFound struct {
}

func (o *GetScheduledTasksNotFound) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksNotFound ", 404)
}

func (o *GetScheduledTasksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksMethodNotAllowed creates a GetScheduledTasksMethodNotAllowed with default headers values
func NewGetScheduledTasksMethodNotAllowed() *GetScheduledTasksMethodNotAllowed {
	return &GetScheduledTasksMethodNotAllowed{}
}

/*GetScheduledTasksMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetScheduledTasksMethodNotAllowed struct {
}

func (o *GetScheduledTasksMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksMethodNotAllowed ", 405)
}

func (o *GetScheduledTasksMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksGone creates a GetScheduledTasksGone with default headers values
func NewGetScheduledTasksGone() *GetScheduledTasksGone {
	return &GetScheduledTasksGone{}
}

/*GetScheduledTasksGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetScheduledTasksGone struct {
}

func (o *GetScheduledTasksGone) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksGone ", 410)
}

func (o *GetScheduledTasksGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksInternalServerError creates a GetScheduledTasksInternalServerError with default headers values
func NewGetScheduledTasksInternalServerError() *GetScheduledTasksInternalServerError {
	return &GetScheduledTasksInternalServerError{}
}

/*GetScheduledTasksInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetScheduledTasksInternalServerError struct {
}

func (o *GetScheduledTasksInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksInternalServerError ", 500)
}

func (o *GetScheduledTasksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetScheduledTasksServiceUnavailable creates a GetScheduledTasksServiceUnavailable with default headers values
func NewGetScheduledTasksServiceUnavailable() *GetScheduledTasksServiceUnavailable {
	return &GetScheduledTasksServiceUnavailable{}
}

/*GetScheduledTasksServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetScheduledTasksServiceUnavailable struct {
}

func (o *GetScheduledTasksServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/2.0/scheduled_tasks/][%d] getScheduledTasksServiceUnavailable ", 503)
}

func (o *GetScheduledTasksServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetScheduledTasksOKBody get scheduled tasks o k body
swagger:model GetScheduledTasksOKBody
*/
type GetScheduledTasksOKBody struct {

	// service schedules
	ServiceSchedules models.ServiceSchedules `json:"service_schedules"`

	// total count
	TotalCount interface{} `json:"total_count,omitempty"`
}

// Validate validates this get scheduled tasks o k body
func (o *GetScheduledTasksOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateServiceSchedules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetScheduledTasksOKBody) validateServiceSchedules(formats strfmt.Registry) error {

	if swag.IsZero(o.ServiceSchedules) { // not required
		return nil
	}

	if err := o.ServiceSchedules.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("getScheduledTasksOK" + "." + "service_schedules")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetScheduledTasksOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetScheduledTasksOKBody) UnmarshalBinary(b []byte) error {
	var res GetScheduledTasksOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
