// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetServicesReader is a Reader for the GetServices structure.
type GetServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServicesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetServicesGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetServicesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicesOK creates a GetServicesOK with default headers values
func NewGetServicesOK() *GetServicesOK {
	return &GetServicesOK{}
}

/*GetServicesOK handles this case with default header values.

The above command returns results like this:
*/
type GetServicesOK struct {
	Payload *GetServicesOKBody
}

func (o *GetServicesOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesOK  %+v", 200, o.Payload)
}

func (o *GetServicesOK) GetPayload() *GetServicesOKBody {
	return o.Payload
}

func (o *GetServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetServicesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicesBadRequest creates a GetServicesBadRequest with default headers values
func NewGetServicesBadRequest() *GetServicesBadRequest {
	return &GetServicesBadRequest{}
}

/*GetServicesBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetServicesBadRequest struct {
}

func (o *GetServicesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesBadRequest ", 400)
}

func (o *GetServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesUnauthorized creates a GetServicesUnauthorized with default headers values
func NewGetServicesUnauthorized() *GetServicesUnauthorized {
	return &GetServicesUnauthorized{}
}

/*GetServicesUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetServicesUnauthorized struct {
}

func (o *GetServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesUnauthorized ", 401)
}

func (o *GetServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesForbidden creates a GetServicesForbidden with default headers values
func NewGetServicesForbidden() *GetServicesForbidden {
	return &GetServicesForbidden{}
}

/*GetServicesForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetServicesForbidden struct {
}

func (o *GetServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesForbidden ", 403)
}

func (o *GetServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesNotFound creates a GetServicesNotFound with default headers values
func NewGetServicesNotFound() *GetServicesNotFound {
	return &GetServicesNotFound{}
}

/*GetServicesNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetServicesNotFound struct {
}

func (o *GetServicesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesNotFound ", 404)
}

func (o *GetServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesMethodNotAllowed creates a GetServicesMethodNotAllowed with default headers values
func NewGetServicesMethodNotAllowed() *GetServicesMethodNotAllowed {
	return &GetServicesMethodNotAllowed{}
}

/*GetServicesMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetServicesMethodNotAllowed struct {
}

func (o *GetServicesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesMethodNotAllowed ", 405)
}

func (o *GetServicesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesGone creates a GetServicesGone with default headers values
func NewGetServicesGone() *GetServicesGone {
	return &GetServicesGone{}
}

/*GetServicesGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetServicesGone struct {
}

func (o *GetServicesGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesGone ", 410)
}

func (o *GetServicesGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesInternalServerError creates a GetServicesInternalServerError with default headers values
func NewGetServicesInternalServerError() *GetServicesInternalServerError {
	return &GetServicesInternalServerError{}
}

/*GetServicesInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetServicesInternalServerError struct {
}

func (o *GetServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesInternalServerError ", 500)
}

func (o *GetServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicesServiceUnavailable creates a GetServicesServiceUnavailable with default headers values
func NewGetServicesServiceUnavailable() *GetServicesServiceUnavailable {
	return &GetServicesServiceUnavailable{}
}

/*GetServicesServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetServicesServiceUnavailable struct {
}

func (o *GetServicesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/services/][%d] getServicesServiceUnavailable ", 503)
}

func (o *GetServicesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetServicesOKBody get services o k body
swagger:model GetServicesOKBody
*/
type GetServicesOKBody struct {

	// services
	Services []models.Services `json:"services"`
}

// Validate validates this get services o k body
func (o *GetServicesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateServices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetServicesOKBody) validateServices(formats strfmt.Registry) error {

	if swag.IsZero(o.Services) { // not required
		return nil
	}

	for i := 0; i < len(o.Services); i++ {

		if err := o.Services[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getServicesOK" + "." + "services" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetServicesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetServicesOKBody) UnmarshalBinary(b []byte) error {
	var res GetServicesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
