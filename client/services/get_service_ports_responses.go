// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetServicePortsReader is a Reader for the GetServicePorts structure.
type GetServicePortsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicePortsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServicePortsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServicePortsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServicePortsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServicePortsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServicePortsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServicePortsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetServicePortsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServicePortsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetServicePortsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicePortsOK creates a GetServicePortsOK with default headers values
func NewGetServicePortsOK() *GetServicePortsOK {
	return &GetServicePortsOK{}
}

/*GetServicePortsOK handles this case with default header values.

The above command returns results like this:
*/
type GetServicePortsOK struct {
	Payload *GetServicePortsOKBody
}

func (o *GetServicePortsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsOK  %+v", 200, o.Payload)
}

func (o *GetServicePortsOK) GetPayload() *GetServicePortsOKBody {
	return o.Payload
}

func (o *GetServicePortsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetServicePortsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicePortsBadRequest creates a GetServicePortsBadRequest with default headers values
func NewGetServicePortsBadRequest() *GetServicePortsBadRequest {
	return &GetServicePortsBadRequest{}
}

/*GetServicePortsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetServicePortsBadRequest struct {
}

func (o *GetServicePortsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsBadRequest ", 400)
}

func (o *GetServicePortsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsUnauthorized creates a GetServicePortsUnauthorized with default headers values
func NewGetServicePortsUnauthorized() *GetServicePortsUnauthorized {
	return &GetServicePortsUnauthorized{}
}

/*GetServicePortsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetServicePortsUnauthorized struct {
}

func (o *GetServicePortsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsUnauthorized ", 401)
}

func (o *GetServicePortsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsForbidden creates a GetServicePortsForbidden with default headers values
func NewGetServicePortsForbidden() *GetServicePortsForbidden {
	return &GetServicePortsForbidden{}
}

/*GetServicePortsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetServicePortsForbidden struct {
}

func (o *GetServicePortsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsForbidden ", 403)
}

func (o *GetServicePortsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsNotFound creates a GetServicePortsNotFound with default headers values
func NewGetServicePortsNotFound() *GetServicePortsNotFound {
	return &GetServicePortsNotFound{}
}

/*GetServicePortsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetServicePortsNotFound struct {
}

func (o *GetServicePortsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsNotFound ", 404)
}

func (o *GetServicePortsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsMethodNotAllowed creates a GetServicePortsMethodNotAllowed with default headers values
func NewGetServicePortsMethodNotAllowed() *GetServicePortsMethodNotAllowed {
	return &GetServicePortsMethodNotAllowed{}
}

/*GetServicePortsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetServicePortsMethodNotAllowed struct {
}

func (o *GetServicePortsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsMethodNotAllowed ", 405)
}

func (o *GetServicePortsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsGone creates a GetServicePortsGone with default headers values
func NewGetServicePortsGone() *GetServicePortsGone {
	return &GetServicePortsGone{}
}

/*GetServicePortsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetServicePortsGone struct {
}

func (o *GetServicePortsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsGone ", 410)
}

func (o *GetServicePortsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsInternalServerError creates a GetServicePortsInternalServerError with default headers values
func NewGetServicePortsInternalServerError() *GetServicePortsInternalServerError {
	return &GetServicePortsInternalServerError{}
}

/*GetServicePortsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetServicePortsInternalServerError struct {
}

func (o *GetServicePortsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsInternalServerError ", 500)
}

func (o *GetServicePortsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePortsServiceUnavailable creates a GetServicePortsServiceUnavailable with default headers values
func NewGetServicePortsServiceUnavailable() *GetServicePortsServiceUnavailable {
	return &GetServicePortsServiceUnavailable{}
}

/*GetServicePortsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetServicePortsServiceUnavailable struct {
}

func (o *GetServicePortsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/service_ports/][%d] getServicePortsServiceUnavailable ", 503)
}

func (o *GetServicePortsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetServicePortsOKBody get service ports o k body
swagger:model GetServicePortsOKBody
*/
type GetServicePortsOKBody struct {

	// service ports
	ServicePorts []*models.ServicePorts `json:"service_ports"`

	// total count
	TotalCount interface{} `json:"total_count,omitempty"`
}

// Validate validates this get service ports o k body
func (o *GetServicePortsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateServicePorts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetServicePortsOKBody) validateServicePorts(formats strfmt.Registry) error {

	if swag.IsZero(o.ServicePorts) { // not required
		return nil
	}

	for i := 0; i < len(o.ServicePorts); i++ {
		if swag.IsZero(o.ServicePorts[i]) { // not required
			continue
		}

		if o.ServicePorts[i] != nil {
			if err := o.ServicePorts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getServicePortsOK" + "." + "service_ports" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetServicePortsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetServicePortsOKBody) UnmarshalBinary(b []byte) error {
	var res GetServicePortsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
