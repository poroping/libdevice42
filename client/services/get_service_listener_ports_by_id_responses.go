// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetServiceListenerPortsByIDReader is a Reader for the GetServiceListenerPortsByID structure.
type GetServiceListenerPortsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceListenerPortsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceListenerPortsByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServiceListenerPortsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetServiceListenerPortsByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceListenerPortsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceListenerPortsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServiceListenerPortsByIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetServiceListenerPortsByIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceListenerPortsByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetServiceListenerPortsByIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceListenerPortsByIDOK creates a GetServiceListenerPortsByIDOK with default headers values
func NewGetServiceListenerPortsByIDOK() *GetServiceListenerPortsByIDOK {
	return &GetServiceListenerPortsByIDOK{}
}

/*GetServiceListenerPortsByIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetServiceListenerPortsByIDOK struct {
	Payload *models.ServiceListenerPort
}

func (o *GetServiceListenerPortsByIDOK) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdOK  %+v", 200, o.Payload)
}

func (o *GetServiceListenerPortsByIDOK) GetPayload() *models.ServiceListenerPort {
	return o.Payload
}

func (o *GetServiceListenerPortsByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceListenerPort)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceListenerPortsByIDBadRequest creates a GetServiceListenerPortsByIDBadRequest with default headers values
func NewGetServiceListenerPortsByIDBadRequest() *GetServiceListenerPortsByIDBadRequest {
	return &GetServiceListenerPortsByIDBadRequest{}
}

/*GetServiceListenerPortsByIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetServiceListenerPortsByIDBadRequest struct {
}

func (o *GetServiceListenerPortsByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdBadRequest ", 400)
}

func (o *GetServiceListenerPortsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDUnauthorized creates a GetServiceListenerPortsByIDUnauthorized with default headers values
func NewGetServiceListenerPortsByIDUnauthorized() *GetServiceListenerPortsByIDUnauthorized {
	return &GetServiceListenerPortsByIDUnauthorized{}
}

/*GetServiceListenerPortsByIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetServiceListenerPortsByIDUnauthorized struct {
}

func (o *GetServiceListenerPortsByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdUnauthorized ", 401)
}

func (o *GetServiceListenerPortsByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDForbidden creates a GetServiceListenerPortsByIDForbidden with default headers values
func NewGetServiceListenerPortsByIDForbidden() *GetServiceListenerPortsByIDForbidden {
	return &GetServiceListenerPortsByIDForbidden{}
}

/*GetServiceListenerPortsByIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetServiceListenerPortsByIDForbidden struct {
}

func (o *GetServiceListenerPortsByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdForbidden ", 403)
}

func (o *GetServiceListenerPortsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDNotFound creates a GetServiceListenerPortsByIDNotFound with default headers values
func NewGetServiceListenerPortsByIDNotFound() *GetServiceListenerPortsByIDNotFound {
	return &GetServiceListenerPortsByIDNotFound{}
}

/*GetServiceListenerPortsByIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetServiceListenerPortsByIDNotFound struct {
}

func (o *GetServiceListenerPortsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdNotFound ", 404)
}

func (o *GetServiceListenerPortsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDMethodNotAllowed creates a GetServiceListenerPortsByIDMethodNotAllowed with default headers values
func NewGetServiceListenerPortsByIDMethodNotAllowed() *GetServiceListenerPortsByIDMethodNotAllowed {
	return &GetServiceListenerPortsByIDMethodNotAllowed{}
}

/*GetServiceListenerPortsByIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetServiceListenerPortsByIDMethodNotAllowed struct {
}

func (o *GetServiceListenerPortsByIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdMethodNotAllowed ", 405)
}

func (o *GetServiceListenerPortsByIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDGone creates a GetServiceListenerPortsByIDGone with default headers values
func NewGetServiceListenerPortsByIDGone() *GetServiceListenerPortsByIDGone {
	return &GetServiceListenerPortsByIDGone{}
}

/*GetServiceListenerPortsByIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetServiceListenerPortsByIDGone struct {
}

func (o *GetServiceListenerPortsByIDGone) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdGone ", 410)
}

func (o *GetServiceListenerPortsByIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDInternalServerError creates a GetServiceListenerPortsByIDInternalServerError with default headers values
func NewGetServiceListenerPortsByIDInternalServerError() *GetServiceListenerPortsByIDInternalServerError {
	return &GetServiceListenerPortsByIDInternalServerError{}
}

/*GetServiceListenerPortsByIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetServiceListenerPortsByIDInternalServerError struct {
}

func (o *GetServiceListenerPortsByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdInternalServerError ", 500)
}

func (o *GetServiceListenerPortsByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceListenerPortsByIDServiceUnavailable creates a GetServiceListenerPortsByIDServiceUnavailable with default headers values
func NewGetServiceListenerPortsByIDServiceUnavailable() *GetServiceListenerPortsByIDServiceUnavailable {
	return &GetServiceListenerPortsByIDServiceUnavailable{}
}

/*GetServiceListenerPortsByIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetServiceListenerPortsByIDServiceUnavailable struct {
}

func (o *GetServiceListenerPortsByIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/2.0/service_listener_ports/{id}/][%d] getServiceListenerPortsByIdServiceUnavailable ", 503)
}

func (o *GetServiceListenerPortsByIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
