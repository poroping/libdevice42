// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// PostDeviceReader is a Reader for the PostDevice structure.
type PostDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDeviceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPostDeviceMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewPostDeviceGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostDeviceServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostDeviceOK creates a PostDeviceOK with default headers values
func NewPostDeviceOK() *PostDeviceOK {
	return &PostDeviceOK{}
}

/*PostDeviceOK handles this case with default header values.

The above command returns results like this:
*/
type PostDeviceOK struct {
	Payload *PostDeviceOKBody
}

func (o *PostDeviceOK) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceOK  %+v", 200, o.Payload)
}

func (o *PostDeviceOK) GetPayload() *PostDeviceOKBody {
	return o.Payload
}

func (o *PostDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostDeviceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDeviceBadRequest creates a PostDeviceBadRequest with default headers values
func NewPostDeviceBadRequest() *PostDeviceBadRequest {
	return &PostDeviceBadRequest{}
}

/*PostDeviceBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type PostDeviceBadRequest struct {
}

func (o *PostDeviceBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceBadRequest ", 400)
}

func (o *PostDeviceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceUnauthorized creates a PostDeviceUnauthorized with default headers values
func NewPostDeviceUnauthorized() *PostDeviceUnauthorized {
	return &PostDeviceUnauthorized{}
}

/*PostDeviceUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type PostDeviceUnauthorized struct {
}

func (o *PostDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceUnauthorized ", 401)
}

func (o *PostDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceForbidden creates a PostDeviceForbidden with default headers values
func NewPostDeviceForbidden() *PostDeviceForbidden {
	return &PostDeviceForbidden{}
}

/*PostDeviceForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type PostDeviceForbidden struct {
}

func (o *PostDeviceForbidden) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceForbidden ", 403)
}

func (o *PostDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceNotFound creates a PostDeviceNotFound with default headers values
func NewPostDeviceNotFound() *PostDeviceNotFound {
	return &PostDeviceNotFound{}
}

/*PostDeviceNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type PostDeviceNotFound struct {
}

func (o *PostDeviceNotFound) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceNotFound ", 404)
}

func (o *PostDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceMethodNotAllowed creates a PostDeviceMethodNotAllowed with default headers values
func NewPostDeviceMethodNotAllowed() *PostDeviceMethodNotAllowed {
	return &PostDeviceMethodNotAllowed{}
}

/*PostDeviceMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type PostDeviceMethodNotAllowed struct {
}

func (o *PostDeviceMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceMethodNotAllowed ", 405)
}

func (o *PostDeviceMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceGone creates a PostDeviceGone with default headers values
func NewPostDeviceGone() *PostDeviceGone {
	return &PostDeviceGone{}
}

/*PostDeviceGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type PostDeviceGone struct {
}

func (o *PostDeviceGone) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceGone ", 410)
}

func (o *PostDeviceGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceInternalServerError creates a PostDeviceInternalServerError with default headers values
func NewPostDeviceInternalServerError() *PostDeviceInternalServerError {
	return &PostDeviceInternalServerError{}
}

/*PostDeviceInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type PostDeviceInternalServerError struct {
}

func (o *PostDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceInternalServerError ", 500)
}

func (o *PostDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostDeviceServiceUnavailable creates a PostDeviceServiceUnavailable with default headers values
func NewPostDeviceServiceUnavailable() *PostDeviceServiceUnavailable {
	return &PostDeviceServiceUnavailable{}
}

/*PostDeviceServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type PostDeviceServiceUnavailable struct {
}

func (o *PostDeviceServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /api/1.0/device/][%d] postDeviceServiceUnavailable ", 503)
}

func (o *PostDeviceServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostDeviceOKBody post device o k body
swagger:model PostDeviceOKBody
*/
type PostDeviceOKBody struct {

	// code
	Code interface{} `json:"code,omitempty"`

	// msg
	Msg models.DeviceName `json:"msg,omitempty"`
}

// Validate validates this post device o k body
func (o *PostDeviceOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDeviceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDeviceOKBody) UnmarshalBinary(b []byte) error {
	var res PostDeviceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
