// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetDevicesSerialReader is a Reader for the GetDevicesSerial structure.
type GetDevicesSerialReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDevicesSerialReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDevicesSerialOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDevicesSerialBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDevicesSerialUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDevicesSerialForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDevicesSerialNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDevicesSerialMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetDevicesSerialGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDevicesSerialInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetDevicesSerialServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDevicesSerialOK creates a GetDevicesSerialOK with default headers values
func NewGetDevicesSerialOK() *GetDevicesSerialOK {
	return &GetDevicesSerialOK{}
}

/*GetDevicesSerialOK handles this case with default header values.

The above command returns results like this:
*/
type GetDevicesSerialOK struct {
	Payload *models.DevicesCustomerID
}

func (o *GetDevicesSerialOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialOK  %+v", 200, o.Payload)
}

func (o *GetDevicesSerialOK) GetPayload() *models.DevicesCustomerID {
	return o.Payload
}

func (o *GetDevicesSerialOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DevicesCustomerID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDevicesSerialBadRequest creates a GetDevicesSerialBadRequest with default headers values
func NewGetDevicesSerialBadRequest() *GetDevicesSerialBadRequest {
	return &GetDevicesSerialBadRequest{}
}

/*GetDevicesSerialBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetDevicesSerialBadRequest struct {
}

func (o *GetDevicesSerialBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialBadRequest ", 400)
}

func (o *GetDevicesSerialBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialUnauthorized creates a GetDevicesSerialUnauthorized with default headers values
func NewGetDevicesSerialUnauthorized() *GetDevicesSerialUnauthorized {
	return &GetDevicesSerialUnauthorized{}
}

/*GetDevicesSerialUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetDevicesSerialUnauthorized struct {
}

func (o *GetDevicesSerialUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialUnauthorized ", 401)
}

func (o *GetDevicesSerialUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialForbidden creates a GetDevicesSerialForbidden with default headers values
func NewGetDevicesSerialForbidden() *GetDevicesSerialForbidden {
	return &GetDevicesSerialForbidden{}
}

/*GetDevicesSerialForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetDevicesSerialForbidden struct {
}

func (o *GetDevicesSerialForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialForbidden ", 403)
}

func (o *GetDevicesSerialForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialNotFound creates a GetDevicesSerialNotFound with default headers values
func NewGetDevicesSerialNotFound() *GetDevicesSerialNotFound {
	return &GetDevicesSerialNotFound{}
}

/*GetDevicesSerialNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetDevicesSerialNotFound struct {
}

func (o *GetDevicesSerialNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialNotFound ", 404)
}

func (o *GetDevicesSerialNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialMethodNotAllowed creates a GetDevicesSerialMethodNotAllowed with default headers values
func NewGetDevicesSerialMethodNotAllowed() *GetDevicesSerialMethodNotAllowed {
	return &GetDevicesSerialMethodNotAllowed{}
}

/*GetDevicesSerialMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetDevicesSerialMethodNotAllowed struct {
}

func (o *GetDevicesSerialMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialMethodNotAllowed ", 405)
}

func (o *GetDevicesSerialMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialGone creates a GetDevicesSerialGone with default headers values
func NewGetDevicesSerialGone() *GetDevicesSerialGone {
	return &GetDevicesSerialGone{}
}

/*GetDevicesSerialGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetDevicesSerialGone struct {
}

func (o *GetDevicesSerialGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialGone ", 410)
}

func (o *GetDevicesSerialGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialInternalServerError creates a GetDevicesSerialInternalServerError with default headers values
func NewGetDevicesSerialInternalServerError() *GetDevicesSerialInternalServerError {
	return &GetDevicesSerialInternalServerError{}
}

/*GetDevicesSerialInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetDevicesSerialInternalServerError struct {
}

func (o *GetDevicesSerialInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialInternalServerError ", 500)
}

func (o *GetDevicesSerialInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDevicesSerialServiceUnavailable creates a GetDevicesSerialServiceUnavailable with default headers values
func NewGetDevicesSerialServiceUnavailable() *GetDevicesSerialServiceUnavailable {
	return &GetDevicesSerialServiceUnavailable{}
}

/*GetDevicesSerialServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetDevicesSerialServiceUnavailable struct {
}

func (o *GetDevicesSerialServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/devices/serial/{device-serial}/][%d] getDevicesSerialServiceUnavailable ", 503)
}

func (o *GetDevicesSerialServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
