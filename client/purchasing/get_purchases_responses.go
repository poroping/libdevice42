// Code generated by go-swagger; DO NOT EDIT.

package purchasing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetPurchasesReader is a Reader for the GetPurchases structure.
type GetPurchasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPurchasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPurchasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPurchasesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPurchasesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPurchasesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPurchasesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPurchasesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPurchasesGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPurchasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPurchasesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPurchasesOK creates a GetPurchasesOK with default headers values
func NewGetPurchasesOK() *GetPurchasesOK {
	return &GetPurchasesOK{}
}

/*GetPurchasesOK handles this case with default header values.

The above command returns results like this:
*/
type GetPurchasesOK struct {
	Payload *models.Purchases
}

func (o *GetPurchasesOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesOK  %+v", 200, o.Payload)
}

func (o *GetPurchasesOK) GetPayload() *models.Purchases {
	return o.Payload
}

func (o *GetPurchasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Purchases)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPurchasesBadRequest creates a GetPurchasesBadRequest with default headers values
func NewGetPurchasesBadRequest() *GetPurchasesBadRequest {
	return &GetPurchasesBadRequest{}
}

/*GetPurchasesBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPurchasesBadRequest struct {
}

func (o *GetPurchasesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesBadRequest ", 400)
}

func (o *GetPurchasesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesUnauthorized creates a GetPurchasesUnauthorized with default headers values
func NewGetPurchasesUnauthorized() *GetPurchasesUnauthorized {
	return &GetPurchasesUnauthorized{}
}

/*GetPurchasesUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPurchasesUnauthorized struct {
}

func (o *GetPurchasesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesUnauthorized ", 401)
}

func (o *GetPurchasesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesForbidden creates a GetPurchasesForbidden with default headers values
func NewGetPurchasesForbidden() *GetPurchasesForbidden {
	return &GetPurchasesForbidden{}
}

/*GetPurchasesForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPurchasesForbidden struct {
}

func (o *GetPurchasesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesForbidden ", 403)
}

func (o *GetPurchasesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesNotFound creates a GetPurchasesNotFound with default headers values
func NewGetPurchasesNotFound() *GetPurchasesNotFound {
	return &GetPurchasesNotFound{}
}

/*GetPurchasesNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPurchasesNotFound struct {
}

func (o *GetPurchasesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesNotFound ", 404)
}

func (o *GetPurchasesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesMethodNotAllowed creates a GetPurchasesMethodNotAllowed with default headers values
func NewGetPurchasesMethodNotAllowed() *GetPurchasesMethodNotAllowed {
	return &GetPurchasesMethodNotAllowed{}
}

/*GetPurchasesMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPurchasesMethodNotAllowed struct {
}

func (o *GetPurchasesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesMethodNotAllowed ", 405)
}

func (o *GetPurchasesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesGone creates a GetPurchasesGone with default headers values
func NewGetPurchasesGone() *GetPurchasesGone {
	return &GetPurchasesGone{}
}

/*GetPurchasesGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPurchasesGone struct {
}

func (o *GetPurchasesGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesGone ", 410)
}

func (o *GetPurchasesGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesInternalServerError creates a GetPurchasesInternalServerError with default headers values
func NewGetPurchasesInternalServerError() *GetPurchasesInternalServerError {
	return &GetPurchasesInternalServerError{}
}

/*GetPurchasesInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPurchasesInternalServerError struct {
}

func (o *GetPurchasesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesInternalServerError ", 500)
}

func (o *GetPurchasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPurchasesServiceUnavailable creates a GetPurchasesServiceUnavailable with default headers values
func NewGetPurchasesServiceUnavailable() *GetPurchasesServiceUnavailable {
	return &GetPurchasesServiceUnavailable{}
}

/*GetPurchasesServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPurchasesServiceUnavailable struct {
}

func (o *GetPurchasesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/purchases/][%d] getPurchasesServiceUnavailable ", 503)
}

func (o *GetPurchasesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
