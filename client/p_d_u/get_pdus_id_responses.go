// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetPdusIDReader is a Reader for the GetPdusID structure.
type GetPdusIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPdusIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPdusIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPdusIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPdusIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPdusIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPdusIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPdusIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPdusIDGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPdusIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPdusIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPdusIDOK creates a GetPdusIDOK with default headers values
func NewGetPdusIDOK() *GetPdusIDOK {
	return &GetPdusIDOK{}
}

/*GetPdusIDOK handles this case with default header values.

The above command returns results like this:
*/
type GetPdusIDOK struct {
	Payload *models.PduByID
}

func (o *GetPdusIDOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdOK  %+v", 200, o.Payload)
}

func (o *GetPdusIDOK) GetPayload() *models.PduByID {
	return o.Payload
}

func (o *GetPdusIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PduByID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPdusIDBadRequest creates a GetPdusIDBadRequest with default headers values
func NewGetPdusIDBadRequest() *GetPdusIDBadRequest {
	return &GetPdusIDBadRequest{}
}

/*GetPdusIDBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPdusIDBadRequest struct {
}

func (o *GetPdusIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdBadRequest ", 400)
}

func (o *GetPdusIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDUnauthorized creates a GetPdusIDUnauthorized with default headers values
func NewGetPdusIDUnauthorized() *GetPdusIDUnauthorized {
	return &GetPdusIDUnauthorized{}
}

/*GetPdusIDUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPdusIDUnauthorized struct {
}

func (o *GetPdusIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdUnauthorized ", 401)
}

func (o *GetPdusIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDForbidden creates a GetPdusIDForbidden with default headers values
func NewGetPdusIDForbidden() *GetPdusIDForbidden {
	return &GetPdusIDForbidden{}
}

/*GetPdusIDForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPdusIDForbidden struct {
}

func (o *GetPdusIDForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdForbidden ", 403)
}

func (o *GetPdusIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDNotFound creates a GetPdusIDNotFound with default headers values
func NewGetPdusIDNotFound() *GetPdusIDNotFound {
	return &GetPdusIDNotFound{}
}

/*GetPdusIDNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPdusIDNotFound struct {
}

func (o *GetPdusIDNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdNotFound ", 404)
}

func (o *GetPdusIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDMethodNotAllowed creates a GetPdusIDMethodNotAllowed with default headers values
func NewGetPdusIDMethodNotAllowed() *GetPdusIDMethodNotAllowed {
	return &GetPdusIDMethodNotAllowed{}
}

/*GetPdusIDMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPdusIDMethodNotAllowed struct {
}

func (o *GetPdusIDMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdMethodNotAllowed ", 405)
}

func (o *GetPdusIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDGone creates a GetPdusIDGone with default headers values
func NewGetPdusIDGone() *GetPdusIDGone {
	return &GetPdusIDGone{}
}

/*GetPdusIDGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPdusIDGone struct {
}

func (o *GetPdusIDGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdGone ", 410)
}

func (o *GetPdusIDGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDInternalServerError creates a GetPdusIDInternalServerError with default headers values
func NewGetPdusIDInternalServerError() *GetPdusIDInternalServerError {
	return &GetPdusIDInternalServerError{}
}

/*GetPdusIDInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPdusIDInternalServerError struct {
}

func (o *GetPdusIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdInternalServerError ", 500)
}

func (o *GetPdusIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusIDServiceUnavailable creates a GetPdusIDServiceUnavailable with default headers values
func NewGetPdusIDServiceUnavailable() *GetPdusIDServiceUnavailable {
	return &GetPdusIDServiceUnavailable{}
}

/*GetPdusIDServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPdusIDServiceUnavailable struct {
}

func (o *GetPdusIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/{ID}/][%d] getPdusIdServiceUnavailable ", 503)
}

func (o *GetPdusIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
