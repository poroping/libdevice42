// Code generated by go-swagger; DO NOT EDIT.

package p_d_u

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetPdusReader is a Reader for the GetPdus structure.
type GetPdusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPdusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPdusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPdusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPdusUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPdusForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPdusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPdusMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPdusGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPdusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPdusServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPdusOK creates a GetPdusOK with default headers values
func NewGetPdusOK() *GetPdusOK {
	return &GetPdusOK{}
}

/*GetPdusOK handles this case with default header values.

The above command returns results like this:
*/
type GetPdusOK struct {
	Payload *GetPdusOKBody
}

func (o *GetPdusOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusOK  %+v", 200, o.Payload)
}

func (o *GetPdusOK) GetPayload() *GetPdusOKBody {
	return o.Payload
}

func (o *GetPdusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPdusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPdusBadRequest creates a GetPdusBadRequest with default headers values
func NewGetPdusBadRequest() *GetPdusBadRequest {
	return &GetPdusBadRequest{}
}

/*GetPdusBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPdusBadRequest struct {
}

func (o *GetPdusBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusBadRequest ", 400)
}

func (o *GetPdusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusUnauthorized creates a GetPdusUnauthorized with default headers values
func NewGetPdusUnauthorized() *GetPdusUnauthorized {
	return &GetPdusUnauthorized{}
}

/*GetPdusUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPdusUnauthorized struct {
}

func (o *GetPdusUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusUnauthorized ", 401)
}

func (o *GetPdusUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusForbidden creates a GetPdusForbidden with default headers values
func NewGetPdusForbidden() *GetPdusForbidden {
	return &GetPdusForbidden{}
}

/*GetPdusForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPdusForbidden struct {
}

func (o *GetPdusForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusForbidden ", 403)
}

func (o *GetPdusForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusNotFound creates a GetPdusNotFound with default headers values
func NewGetPdusNotFound() *GetPdusNotFound {
	return &GetPdusNotFound{}
}

/*GetPdusNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPdusNotFound struct {
}

func (o *GetPdusNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusNotFound ", 404)
}

func (o *GetPdusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusMethodNotAllowed creates a GetPdusMethodNotAllowed with default headers values
func NewGetPdusMethodNotAllowed() *GetPdusMethodNotAllowed {
	return &GetPdusMethodNotAllowed{}
}

/*GetPdusMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPdusMethodNotAllowed struct {
}

func (o *GetPdusMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusMethodNotAllowed ", 405)
}

func (o *GetPdusMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusGone creates a GetPdusGone with default headers values
func NewGetPdusGone() *GetPdusGone {
	return &GetPdusGone{}
}

/*GetPdusGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPdusGone struct {
}

func (o *GetPdusGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusGone ", 410)
}

func (o *GetPdusGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusInternalServerError creates a GetPdusInternalServerError with default headers values
func NewGetPdusInternalServerError() *GetPdusInternalServerError {
	return &GetPdusInternalServerError{}
}

/*GetPdusInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPdusInternalServerError struct {
}

func (o *GetPdusInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusInternalServerError ", 500)
}

func (o *GetPdusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPdusServiceUnavailable creates a GetPdusServiceUnavailable with default headers values
func NewGetPdusServiceUnavailable() *GetPdusServiceUnavailable {
	return &GetPdusServiceUnavailable{}
}

/*GetPdusServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPdusServiceUnavailable struct {
}

func (o *GetPdusServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/pdus/][%d] getPdusServiceUnavailable ", 503)
}

func (o *GetPdusServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetPdusOKBody get pdus o k body
swagger:model GetPdusOKBody
*/
type GetPdusOKBody struct {

	// pdus
	Pdus []*models.Pdus `json:"pdus"`
}

// Validate validates this get pdus o k body
func (o *GetPdusOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePdus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPdusOKBody) validatePdus(formats strfmt.Registry) error {

	if swag.IsZero(o.Pdus) { // not required
		return nil
	}

	for i := 0; i < len(o.Pdus); i++ {
		if swag.IsZero(o.Pdus[i]) { // not required
			continue
		}

		if o.Pdus[i] != nil {
			if err := o.Pdus[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPdusOK" + "." + "pdus" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPdusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPdusOKBody) UnmarshalBinary(b []byte) error {
	var res GetPdusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
