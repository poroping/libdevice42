// Code generated by go-swagger; DO NOT EDIT.

package parts_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetPartsReader is a Reader for the GetParts structure.
type GetPartsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPartsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPartsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPartsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPartsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPartsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPartsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPartsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetPartsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPartsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetPartsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetPartsOK creates a GetPartsOK with default headers values
func NewGetPartsOK() *GetPartsOK {
	return &GetPartsOK{}
}

/*GetPartsOK handles this case with default header values.

The above command returns results like this:
*/
type GetPartsOK struct {
	Payload *GetPartsOKBody
}

func (o *GetPartsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsOK  %+v", 200, o.Payload)
}

func (o *GetPartsOK) GetPayload() *GetPartsOKBody {
	return o.Payload
}

func (o *GetPartsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPartsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPartsBadRequest creates a GetPartsBadRequest with default headers values
func NewGetPartsBadRequest() *GetPartsBadRequest {
	return &GetPartsBadRequest{}
}

/*GetPartsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetPartsBadRequest struct {
}

func (o *GetPartsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsBadRequest ", 400)
}

func (o *GetPartsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsUnauthorized creates a GetPartsUnauthorized with default headers values
func NewGetPartsUnauthorized() *GetPartsUnauthorized {
	return &GetPartsUnauthorized{}
}

/*GetPartsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetPartsUnauthorized struct {
}

func (o *GetPartsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsUnauthorized ", 401)
}

func (o *GetPartsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsForbidden creates a GetPartsForbidden with default headers values
func NewGetPartsForbidden() *GetPartsForbidden {
	return &GetPartsForbidden{}
}

/*GetPartsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetPartsForbidden struct {
}

func (o *GetPartsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsForbidden ", 403)
}

func (o *GetPartsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsNotFound creates a GetPartsNotFound with default headers values
func NewGetPartsNotFound() *GetPartsNotFound {
	return &GetPartsNotFound{}
}

/*GetPartsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetPartsNotFound struct {
}

func (o *GetPartsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsNotFound ", 404)
}

func (o *GetPartsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsMethodNotAllowed creates a GetPartsMethodNotAllowed with default headers values
func NewGetPartsMethodNotAllowed() *GetPartsMethodNotAllowed {
	return &GetPartsMethodNotAllowed{}
}

/*GetPartsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetPartsMethodNotAllowed struct {
}

func (o *GetPartsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsMethodNotAllowed ", 405)
}

func (o *GetPartsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsGone creates a GetPartsGone with default headers values
func NewGetPartsGone() *GetPartsGone {
	return &GetPartsGone{}
}

/*GetPartsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetPartsGone struct {
}

func (o *GetPartsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsGone ", 410)
}

func (o *GetPartsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsInternalServerError creates a GetPartsInternalServerError with default headers values
func NewGetPartsInternalServerError() *GetPartsInternalServerError {
	return &GetPartsInternalServerError{}
}

/*GetPartsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetPartsInternalServerError struct {
}

func (o *GetPartsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsInternalServerError ", 500)
}

func (o *GetPartsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPartsServiceUnavailable creates a GetPartsServiceUnavailable with default headers values
func NewGetPartsServiceUnavailable() *GetPartsServiceUnavailable {
	return &GetPartsServiceUnavailable{}
}

/*GetPartsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetPartsServiceUnavailable struct {
}

func (o *GetPartsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/parts/][%d] getPartsServiceUnavailable ", 503)
}

func (o *GetPartsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetPartsOKBody get parts o k body
swagger:model GetPartsOKBody
*/
type GetPartsOKBody struct {

	// parts
	Parts []*models.Parts `json:"parts"`
}

// Validate validates this get parts o k body
func (o *GetPartsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPartsOKBody) validateParts(formats strfmt.Registry) error {

	if swag.IsZero(o.Parts) { // not required
		return nil
	}

	for i := 0; i < len(o.Parts); i++ {
		if swag.IsZero(o.Parts[i]) { // not required
			continue
		}

		if o.Parts[i] != nil {
			if err := o.Parts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPartsOK" + "." + "parts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPartsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPartsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPartsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
