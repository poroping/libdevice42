// Code generated by go-swagger; DO NOT EDIT.

package hardware_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetHardwaresReader is a Reader for the GetHardwares structure.
type GetHardwaresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHardwaresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetHardwaresOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetHardwaresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetHardwaresUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetHardwaresForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetHardwaresNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetHardwaresMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetHardwaresGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetHardwaresInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetHardwaresServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetHardwaresOK creates a GetHardwaresOK with default headers values
func NewGetHardwaresOK() *GetHardwaresOK {
	return &GetHardwaresOK{}
}

/*GetHardwaresOK handles this case with default header values.

The above command returns results like this:
*/
type GetHardwaresOK struct {
	Payload *GetHardwaresOKBody
}

func (o *GetHardwaresOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresOK  %+v", 200, o.Payload)
}

func (o *GetHardwaresOK) GetPayload() *GetHardwaresOKBody {
	return o.Payload
}

func (o *GetHardwaresOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetHardwaresOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetHardwaresBadRequest creates a GetHardwaresBadRequest with default headers values
func NewGetHardwaresBadRequest() *GetHardwaresBadRequest {
	return &GetHardwaresBadRequest{}
}

/*GetHardwaresBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetHardwaresBadRequest struct {
}

func (o *GetHardwaresBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresBadRequest ", 400)
}

func (o *GetHardwaresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresUnauthorized creates a GetHardwaresUnauthorized with default headers values
func NewGetHardwaresUnauthorized() *GetHardwaresUnauthorized {
	return &GetHardwaresUnauthorized{}
}

/*GetHardwaresUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetHardwaresUnauthorized struct {
}

func (o *GetHardwaresUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresUnauthorized ", 401)
}

func (o *GetHardwaresUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresForbidden creates a GetHardwaresForbidden with default headers values
func NewGetHardwaresForbidden() *GetHardwaresForbidden {
	return &GetHardwaresForbidden{}
}

/*GetHardwaresForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetHardwaresForbidden struct {
}

func (o *GetHardwaresForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresForbidden ", 403)
}

func (o *GetHardwaresForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresNotFound creates a GetHardwaresNotFound with default headers values
func NewGetHardwaresNotFound() *GetHardwaresNotFound {
	return &GetHardwaresNotFound{}
}

/*GetHardwaresNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetHardwaresNotFound struct {
}

func (o *GetHardwaresNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresNotFound ", 404)
}

func (o *GetHardwaresNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresMethodNotAllowed creates a GetHardwaresMethodNotAllowed with default headers values
func NewGetHardwaresMethodNotAllowed() *GetHardwaresMethodNotAllowed {
	return &GetHardwaresMethodNotAllowed{}
}

/*GetHardwaresMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetHardwaresMethodNotAllowed struct {
}

func (o *GetHardwaresMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresMethodNotAllowed ", 405)
}

func (o *GetHardwaresMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresGone creates a GetHardwaresGone with default headers values
func NewGetHardwaresGone() *GetHardwaresGone {
	return &GetHardwaresGone{}
}

/*GetHardwaresGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetHardwaresGone struct {
}

func (o *GetHardwaresGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresGone ", 410)
}

func (o *GetHardwaresGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresInternalServerError creates a GetHardwaresInternalServerError with default headers values
func NewGetHardwaresInternalServerError() *GetHardwaresInternalServerError {
	return &GetHardwaresInternalServerError{}
}

/*GetHardwaresInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetHardwaresInternalServerError struct {
}

func (o *GetHardwaresInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresInternalServerError ", 500)
}

func (o *GetHardwaresInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHardwaresServiceUnavailable creates a GetHardwaresServiceUnavailable with default headers values
func NewGetHardwaresServiceUnavailable() *GetHardwaresServiceUnavailable {
	return &GetHardwaresServiceUnavailable{}
}

/*GetHardwaresServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetHardwaresServiceUnavailable struct {
}

func (o *GetHardwaresServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/hardwares/][%d] getHardwaresServiceUnavailable ", 503)
}

func (o *GetHardwaresServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetHardwaresOKBody get hardwares o k body
swagger:model GetHardwaresOKBody
*/
type GetHardwaresOKBody struct {

	// models
	Models []*models.HardwareModels `json:"models"`
}

// Validate validates this get hardwares o k body
func (o *GetHardwaresOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateModels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetHardwaresOKBody) validateModels(formats strfmt.Registry) error {

	if swag.IsZero(o.Models) { // not required
		return nil
	}

	for i := 0; i < len(o.Models); i++ {
		if swag.IsZero(o.Models[i]) { // not required
			continue
		}

		if o.Models[i] != nil {
			if err := o.Models[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getHardwaresOK" + "." + "models" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetHardwaresOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetHardwaresOKBody) UnmarshalBinary(b []byte) error {
	var res GetHardwaresOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
