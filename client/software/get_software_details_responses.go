// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetSoftwareDetailsReader is a Reader for the GetSoftwareDetails structure.
type GetSoftwareDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSoftwareDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSoftwareDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSoftwareDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSoftwareDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSoftwareDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSoftwareDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSoftwareDetailsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetSoftwareDetailsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSoftwareDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetSoftwareDetailsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSoftwareDetailsOK creates a GetSoftwareDetailsOK with default headers values
func NewGetSoftwareDetailsOK() *GetSoftwareDetailsOK {
	return &GetSoftwareDetailsOK{}
}

/*GetSoftwareDetailsOK handles this case with default header values.

The above command returns results like this:
*/
type GetSoftwareDetailsOK struct {
	Payload *GetSoftwareDetailsOKBody
}

func (o *GetSoftwareDetailsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsOK  %+v", 200, o.Payload)
}

func (o *GetSoftwareDetailsOK) GetPayload() *GetSoftwareDetailsOKBody {
	return o.Payload
}

func (o *GetSoftwareDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSoftwareDetailsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSoftwareDetailsBadRequest creates a GetSoftwareDetailsBadRequest with default headers values
func NewGetSoftwareDetailsBadRequest() *GetSoftwareDetailsBadRequest {
	return &GetSoftwareDetailsBadRequest{}
}

/*GetSoftwareDetailsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetSoftwareDetailsBadRequest struct {
}

func (o *GetSoftwareDetailsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsBadRequest ", 400)
}

func (o *GetSoftwareDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsUnauthorized creates a GetSoftwareDetailsUnauthorized with default headers values
func NewGetSoftwareDetailsUnauthorized() *GetSoftwareDetailsUnauthorized {
	return &GetSoftwareDetailsUnauthorized{}
}

/*GetSoftwareDetailsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetSoftwareDetailsUnauthorized struct {
}

func (o *GetSoftwareDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsUnauthorized ", 401)
}

func (o *GetSoftwareDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsForbidden creates a GetSoftwareDetailsForbidden with default headers values
func NewGetSoftwareDetailsForbidden() *GetSoftwareDetailsForbidden {
	return &GetSoftwareDetailsForbidden{}
}

/*GetSoftwareDetailsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetSoftwareDetailsForbidden struct {
}

func (o *GetSoftwareDetailsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsForbidden ", 403)
}

func (o *GetSoftwareDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsNotFound creates a GetSoftwareDetailsNotFound with default headers values
func NewGetSoftwareDetailsNotFound() *GetSoftwareDetailsNotFound {
	return &GetSoftwareDetailsNotFound{}
}

/*GetSoftwareDetailsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetSoftwareDetailsNotFound struct {
}

func (o *GetSoftwareDetailsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsNotFound ", 404)
}

func (o *GetSoftwareDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsMethodNotAllowed creates a GetSoftwareDetailsMethodNotAllowed with default headers values
func NewGetSoftwareDetailsMethodNotAllowed() *GetSoftwareDetailsMethodNotAllowed {
	return &GetSoftwareDetailsMethodNotAllowed{}
}

/*GetSoftwareDetailsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetSoftwareDetailsMethodNotAllowed struct {
}

func (o *GetSoftwareDetailsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsMethodNotAllowed ", 405)
}

func (o *GetSoftwareDetailsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsGone creates a GetSoftwareDetailsGone with default headers values
func NewGetSoftwareDetailsGone() *GetSoftwareDetailsGone {
	return &GetSoftwareDetailsGone{}
}

/*GetSoftwareDetailsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetSoftwareDetailsGone struct {
}

func (o *GetSoftwareDetailsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsGone ", 410)
}

func (o *GetSoftwareDetailsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsInternalServerError creates a GetSoftwareDetailsInternalServerError with default headers values
func NewGetSoftwareDetailsInternalServerError() *GetSoftwareDetailsInternalServerError {
	return &GetSoftwareDetailsInternalServerError{}
}

/*GetSoftwareDetailsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetSoftwareDetailsInternalServerError struct {
}

func (o *GetSoftwareDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsInternalServerError ", 500)
}

func (o *GetSoftwareDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSoftwareDetailsServiceUnavailable creates a GetSoftwareDetailsServiceUnavailable with default headers values
func NewGetSoftwareDetailsServiceUnavailable() *GetSoftwareDetailsServiceUnavailable {
	return &GetSoftwareDetailsServiceUnavailable{}
}

/*GetSoftwareDetailsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetSoftwareDetailsServiceUnavailable struct {
}

func (o *GetSoftwareDetailsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/software_details/][%d] getSoftwareDetailsServiceUnavailable ", 503)
}

func (o *GetSoftwareDetailsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetSoftwareDetailsOKBody get software details o k body
swagger:model GetSoftwareDetailsOKBody
*/
type GetSoftwareDetailsOKBody struct {

	// limit
	Limit interface{} `json:"limit,omitempty"`

	// offset
	Offset interface{} `json:"offset,omitempty"`

	// software details
	SoftwareDetails []*models.GetSoftwareDetails `json:"software_details"`
}

// Validate validates this get software details o k body
func (o *GetSoftwareDetailsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSoftwareDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSoftwareDetailsOKBody) validateSoftwareDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.SoftwareDetails) { // not required
		return nil
	}

	for i := 0; i < len(o.SoftwareDetails); i++ {
		if swag.IsZero(o.SoftwareDetails[i]) { // not required
			continue
		}

		if o.SoftwareDetails[i] != nil {
			if err := o.SoftwareDetails[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getSoftwareDetailsOK" + "." + "software_details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetSoftwareDetailsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSoftwareDetailsOKBody) UnmarshalBinary(b []byte) error {
	var res GetSoftwareDetailsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
