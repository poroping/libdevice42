// Code generated by go-swagger; DO NOT EDIT.

package cables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetCablesReader is a Reader for the GetCables structure.
type GetCablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCablesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCablesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCablesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetCablesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetCablesGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCablesServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCablesOK creates a GetCablesOK with default headers values
func NewGetCablesOK() *GetCablesOK {
	return &GetCablesOK{}
}

/*GetCablesOK handles this case with default header values.

The above command returns results like this:
*/
type GetCablesOK struct {
	Payload *GetCablesOKBody
}

func (o *GetCablesOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesOK  %+v", 200, o.Payload)
}

func (o *GetCablesOK) GetPayload() *GetCablesOKBody {
	return o.Payload
}

func (o *GetCablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCablesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCablesBadRequest creates a GetCablesBadRequest with default headers values
func NewGetCablesBadRequest() *GetCablesBadRequest {
	return &GetCablesBadRequest{}
}

/*GetCablesBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetCablesBadRequest struct {
}

func (o *GetCablesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesBadRequest ", 400)
}

func (o *GetCablesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesUnauthorized creates a GetCablesUnauthorized with default headers values
func NewGetCablesUnauthorized() *GetCablesUnauthorized {
	return &GetCablesUnauthorized{}
}

/*GetCablesUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetCablesUnauthorized struct {
}

func (o *GetCablesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesUnauthorized ", 401)
}

func (o *GetCablesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesForbidden creates a GetCablesForbidden with default headers values
func NewGetCablesForbidden() *GetCablesForbidden {
	return &GetCablesForbidden{}
}

/*GetCablesForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetCablesForbidden struct {
}

func (o *GetCablesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesForbidden ", 403)
}

func (o *GetCablesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesNotFound creates a GetCablesNotFound with default headers values
func NewGetCablesNotFound() *GetCablesNotFound {
	return &GetCablesNotFound{}
}

/*GetCablesNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetCablesNotFound struct {
}

func (o *GetCablesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesNotFound ", 404)
}

func (o *GetCablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesMethodNotAllowed creates a GetCablesMethodNotAllowed with default headers values
func NewGetCablesMethodNotAllowed() *GetCablesMethodNotAllowed {
	return &GetCablesMethodNotAllowed{}
}

/*GetCablesMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetCablesMethodNotAllowed struct {
}

func (o *GetCablesMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesMethodNotAllowed ", 405)
}

func (o *GetCablesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesGone creates a GetCablesGone with default headers values
func NewGetCablesGone() *GetCablesGone {
	return &GetCablesGone{}
}

/*GetCablesGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetCablesGone struct {
}

func (o *GetCablesGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesGone ", 410)
}

func (o *GetCablesGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesInternalServerError creates a GetCablesInternalServerError with default headers values
func NewGetCablesInternalServerError() *GetCablesInternalServerError {
	return &GetCablesInternalServerError{}
}

/*GetCablesInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetCablesInternalServerError struct {
}

func (o *GetCablesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesInternalServerError ", 500)
}

func (o *GetCablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCablesServiceUnavailable creates a GetCablesServiceUnavailable with default headers values
func NewGetCablesServiceUnavailable() *GetCablesServiceUnavailable {
	return &GetCablesServiceUnavailable{}
}

/*GetCablesServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetCablesServiceUnavailable struct {
}

func (o *GetCablesServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/cables/][%d] getCablesServiceUnavailable ", 503)
}

func (o *GetCablesServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetCablesOKBody get cables o k body
swagger:model GetCablesOKBody
*/
type GetCablesOKBody struct {

	// cable
	Cable []*models.Cable `json:"cable"`
}

// Validate validates this get cables o k body
func (o *GetCablesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCable(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCablesOKBody) validateCable(formats strfmt.Registry) error {

	if swag.IsZero(o.Cable) { // not required
		return nil
	}

	for i := 0; i < len(o.Cable); i++ {
		if swag.IsZero(o.Cable[i]) { // not required
			continue
		}

		if o.Cable[i] != nil {
			if err := o.Cable[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCablesOK" + "." + "cable" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCablesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCablesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCablesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
