// Code generated by go-swagger; DO NOT EDIT.

package vendors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetVendorsReader is a Reader for the GetVendors structure.
type GetVendorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVendorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVendorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVendorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetVendorsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVendorsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVendorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVendorsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetVendorsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVendorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetVendorsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetVendorsOK creates a GetVendorsOK with default headers values
func NewGetVendorsOK() *GetVendorsOK {
	return &GetVendorsOK{}
}

/*GetVendorsOK handles this case with default header values.

The above command returns results like this:
*/
type GetVendorsOK struct {
	Payload *GetVendorsOKBody
}

func (o *GetVendorsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsOK  %+v", 200, o.Payload)
}

func (o *GetVendorsOK) GetPayload() *GetVendorsOKBody {
	return o.Payload
}

func (o *GetVendorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetVendorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVendorsBadRequest creates a GetVendorsBadRequest with default headers values
func NewGetVendorsBadRequest() *GetVendorsBadRequest {
	return &GetVendorsBadRequest{}
}

/*GetVendorsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetVendorsBadRequest struct {
}

func (o *GetVendorsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsBadRequest ", 400)
}

func (o *GetVendorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsUnauthorized creates a GetVendorsUnauthorized with default headers values
func NewGetVendorsUnauthorized() *GetVendorsUnauthorized {
	return &GetVendorsUnauthorized{}
}

/*GetVendorsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetVendorsUnauthorized struct {
}

func (o *GetVendorsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsUnauthorized ", 401)
}

func (o *GetVendorsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsForbidden creates a GetVendorsForbidden with default headers values
func NewGetVendorsForbidden() *GetVendorsForbidden {
	return &GetVendorsForbidden{}
}

/*GetVendorsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetVendorsForbidden struct {
}

func (o *GetVendorsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsForbidden ", 403)
}

func (o *GetVendorsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsNotFound creates a GetVendorsNotFound with default headers values
func NewGetVendorsNotFound() *GetVendorsNotFound {
	return &GetVendorsNotFound{}
}

/*GetVendorsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetVendorsNotFound struct {
}

func (o *GetVendorsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsNotFound ", 404)
}

func (o *GetVendorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsMethodNotAllowed creates a GetVendorsMethodNotAllowed with default headers values
func NewGetVendorsMethodNotAllowed() *GetVendorsMethodNotAllowed {
	return &GetVendorsMethodNotAllowed{}
}

/*GetVendorsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetVendorsMethodNotAllowed struct {
}

func (o *GetVendorsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsMethodNotAllowed ", 405)
}

func (o *GetVendorsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsGone creates a GetVendorsGone with default headers values
func NewGetVendorsGone() *GetVendorsGone {
	return &GetVendorsGone{}
}

/*GetVendorsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetVendorsGone struct {
}

func (o *GetVendorsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsGone ", 410)
}

func (o *GetVendorsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsInternalServerError creates a GetVendorsInternalServerError with default headers values
func NewGetVendorsInternalServerError() *GetVendorsInternalServerError {
	return &GetVendorsInternalServerError{}
}

/*GetVendorsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetVendorsInternalServerError struct {
}

func (o *GetVendorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsInternalServerError ", 500)
}

func (o *GetVendorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVendorsServiceUnavailable creates a GetVendorsServiceUnavailable with default headers values
func NewGetVendorsServiceUnavailable() *GetVendorsServiceUnavailable {
	return &GetVendorsServiceUnavailable{}
}

/*GetVendorsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetVendorsServiceUnavailable struct {
}

func (o *GetVendorsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/vendors/][%d] getVendorsServiceUnavailable ", 503)
}

func (o *GetVendorsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetVendorsOKBody get vendors o k body
swagger:model GetVendorsOKBody
*/
type GetVendorsOKBody struct {

	// vendors
	Vendors []*models.GetAllVendors `json:"vendors"`
}

// Validate validates this get vendors o k body
func (o *GetVendorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVendors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetVendorsOKBody) validateVendors(formats strfmt.Registry) error {

	if swag.IsZero(o.Vendors) { // not required
		return nil
	}

	for i := 0; i < len(o.Vendors); i++ {
		if swag.IsZero(o.Vendors[i]) { // not required
			continue
		}

		if o.Vendors[i] != nil {
			if err := o.Vendors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getVendorsOK" + "." + "vendors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetVendorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetVendorsOKBody) UnmarshalBinary(b []byte) error {
	var res GetVendorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
