// Code generated by go-swagger; DO NOT EDIT.

package operating_systems

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetOperatingSystemsReader is a Reader for the GetOperatingSystems structure.
type GetOperatingSystemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOperatingSystemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOperatingSystemsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOperatingSystemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOperatingSystemsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOperatingSystemsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOperatingSystemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOperatingSystemsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetOperatingSystemsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOperatingSystemsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetOperatingSystemsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOperatingSystemsOK creates a GetOperatingSystemsOK with default headers values
func NewGetOperatingSystemsOK() *GetOperatingSystemsOK {
	return &GetOperatingSystemsOK{}
}

/*GetOperatingSystemsOK handles this case with default header values.

The above command returns results like this:
*/
type GetOperatingSystemsOK struct {
	Payload *GetOperatingSystemsOKBody
}

func (o *GetOperatingSystemsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsOK  %+v", 200, o.Payload)
}

func (o *GetOperatingSystemsOK) GetPayload() *GetOperatingSystemsOKBody {
	return o.Payload
}

func (o *GetOperatingSystemsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetOperatingSystemsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOperatingSystemsBadRequest creates a GetOperatingSystemsBadRequest with default headers values
func NewGetOperatingSystemsBadRequest() *GetOperatingSystemsBadRequest {
	return &GetOperatingSystemsBadRequest{}
}

/*GetOperatingSystemsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetOperatingSystemsBadRequest struct {
}

func (o *GetOperatingSystemsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsBadRequest ", 400)
}

func (o *GetOperatingSystemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsUnauthorized creates a GetOperatingSystemsUnauthorized with default headers values
func NewGetOperatingSystemsUnauthorized() *GetOperatingSystemsUnauthorized {
	return &GetOperatingSystemsUnauthorized{}
}

/*GetOperatingSystemsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetOperatingSystemsUnauthorized struct {
}

func (o *GetOperatingSystemsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsUnauthorized ", 401)
}

func (o *GetOperatingSystemsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsForbidden creates a GetOperatingSystemsForbidden with default headers values
func NewGetOperatingSystemsForbidden() *GetOperatingSystemsForbidden {
	return &GetOperatingSystemsForbidden{}
}

/*GetOperatingSystemsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetOperatingSystemsForbidden struct {
}

func (o *GetOperatingSystemsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsForbidden ", 403)
}

func (o *GetOperatingSystemsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsNotFound creates a GetOperatingSystemsNotFound with default headers values
func NewGetOperatingSystemsNotFound() *GetOperatingSystemsNotFound {
	return &GetOperatingSystemsNotFound{}
}

/*GetOperatingSystemsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetOperatingSystemsNotFound struct {
}

func (o *GetOperatingSystemsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsNotFound ", 404)
}

func (o *GetOperatingSystemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsMethodNotAllowed creates a GetOperatingSystemsMethodNotAllowed with default headers values
func NewGetOperatingSystemsMethodNotAllowed() *GetOperatingSystemsMethodNotAllowed {
	return &GetOperatingSystemsMethodNotAllowed{}
}

/*GetOperatingSystemsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetOperatingSystemsMethodNotAllowed struct {
}

func (o *GetOperatingSystemsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsMethodNotAllowed ", 405)
}

func (o *GetOperatingSystemsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsGone creates a GetOperatingSystemsGone with default headers values
func NewGetOperatingSystemsGone() *GetOperatingSystemsGone {
	return &GetOperatingSystemsGone{}
}

/*GetOperatingSystemsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetOperatingSystemsGone struct {
}

func (o *GetOperatingSystemsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsGone ", 410)
}

func (o *GetOperatingSystemsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsInternalServerError creates a GetOperatingSystemsInternalServerError with default headers values
func NewGetOperatingSystemsInternalServerError() *GetOperatingSystemsInternalServerError {
	return &GetOperatingSystemsInternalServerError{}
}

/*GetOperatingSystemsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetOperatingSystemsInternalServerError struct {
}

func (o *GetOperatingSystemsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsInternalServerError ", 500)
}

func (o *GetOperatingSystemsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetOperatingSystemsServiceUnavailable creates a GetOperatingSystemsServiceUnavailable with default headers values
func NewGetOperatingSystemsServiceUnavailable() *GetOperatingSystemsServiceUnavailable {
	return &GetOperatingSystemsServiceUnavailable{}
}

/*GetOperatingSystemsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetOperatingSystemsServiceUnavailable struct {
}

func (o *GetOperatingSystemsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/operatingsystems/][%d] getOperatingSystemsServiceUnavailable ", 503)
}

func (o *GetOperatingSystemsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetOperatingSystemsOKBody get operating systems o k body
swagger:model GetOperatingSystemsOKBody
*/
type GetOperatingSystemsOKBody struct {

	// operatingsystems
	Operatingsystems []*models.OperatingSystems `json:"operatingsystems"`
}

// Validate validates this get operating systems o k body
func (o *GetOperatingSystemsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOperatingsystems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOperatingSystemsOKBody) validateOperatingsystems(formats strfmt.Registry) error {

	if swag.IsZero(o.Operatingsystems) { // not required
		return nil
	}

	for i := 0; i < len(o.Operatingsystems); i++ {
		if swag.IsZero(o.Operatingsystems[i]) { // not required
			continue
		}

		if o.Operatingsystems[i] != nil {
			if err := o.Operatingsystems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOperatingSystemsOK" + "." + "operatingsystems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOperatingSystemsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOperatingSystemsOKBody) UnmarshalBinary(b []byte) error {
	var res GetOperatingSystemsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
