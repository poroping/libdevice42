// Code generated by go-swagger; DO NOT EDIT.

package audit_log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/poroping/libdevice42/models"
)

// GetAuditlogsReader is a Reader for the GetAuditlogs structure.
type GetAuditlogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuditlogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuditlogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuditlogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAuditlogsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuditlogsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuditlogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAuditlogsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetAuditlogsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuditlogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAuditlogsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAuditlogsOK creates a GetAuditlogsOK with default headers values
func NewGetAuditlogsOK() *GetAuditlogsOK {
	return &GetAuditlogsOK{}
}

/*GetAuditlogsOK handles this case with default header values.

The above command returns results like this:
*/
type GetAuditlogsOK struct {
	Payload *models.GetAuditLogs
}

func (o *GetAuditlogsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsOK  %+v", 200, o.Payload)
}

func (o *GetAuditlogsOK) GetPayload() *models.GetAuditLogs {
	return o.Payload
}

func (o *GetAuditlogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetAuditLogs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuditlogsBadRequest creates a GetAuditlogsBadRequest with default headers values
func NewGetAuditlogsBadRequest() *GetAuditlogsBadRequest {
	return &GetAuditlogsBadRequest{}
}

/*GetAuditlogsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetAuditlogsBadRequest struct {
}

func (o *GetAuditlogsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsBadRequest ", 400)
}

func (o *GetAuditlogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsUnauthorized creates a GetAuditlogsUnauthorized with default headers values
func NewGetAuditlogsUnauthorized() *GetAuditlogsUnauthorized {
	return &GetAuditlogsUnauthorized{}
}

/*GetAuditlogsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetAuditlogsUnauthorized struct {
}

func (o *GetAuditlogsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsUnauthorized ", 401)
}

func (o *GetAuditlogsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsForbidden creates a GetAuditlogsForbidden with default headers values
func NewGetAuditlogsForbidden() *GetAuditlogsForbidden {
	return &GetAuditlogsForbidden{}
}

/*GetAuditlogsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetAuditlogsForbidden struct {
}

func (o *GetAuditlogsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsForbidden ", 403)
}

func (o *GetAuditlogsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsNotFound creates a GetAuditlogsNotFound with default headers values
func NewGetAuditlogsNotFound() *GetAuditlogsNotFound {
	return &GetAuditlogsNotFound{}
}

/*GetAuditlogsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetAuditlogsNotFound struct {
}

func (o *GetAuditlogsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsNotFound ", 404)
}

func (o *GetAuditlogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsMethodNotAllowed creates a GetAuditlogsMethodNotAllowed with default headers values
func NewGetAuditlogsMethodNotAllowed() *GetAuditlogsMethodNotAllowed {
	return &GetAuditlogsMethodNotAllowed{}
}

/*GetAuditlogsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetAuditlogsMethodNotAllowed struct {
}

func (o *GetAuditlogsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsMethodNotAllowed ", 405)
}

func (o *GetAuditlogsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsGone creates a GetAuditlogsGone with default headers values
func NewGetAuditlogsGone() *GetAuditlogsGone {
	return &GetAuditlogsGone{}
}

/*GetAuditlogsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetAuditlogsGone struct {
}

func (o *GetAuditlogsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsGone ", 410)
}

func (o *GetAuditlogsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsInternalServerError creates a GetAuditlogsInternalServerError with default headers values
func NewGetAuditlogsInternalServerError() *GetAuditlogsInternalServerError {
	return &GetAuditlogsInternalServerError{}
}

/*GetAuditlogsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetAuditlogsInternalServerError struct {
}

func (o *GetAuditlogsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsInternalServerError ", 500)
}

func (o *GetAuditlogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuditlogsServiceUnavailable creates a GetAuditlogsServiceUnavailable with default headers values
func NewGetAuditlogsServiceUnavailable() *GetAuditlogsServiceUnavailable {
	return &GetAuditlogsServiceUnavailable{}
}

/*GetAuditlogsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetAuditlogsServiceUnavailable struct {
}

func (o *GetAuditlogsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/auditlogs/][%d] getAuditlogsServiceUnavailable ", 503)
}

func (o *GetAuditlogsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
