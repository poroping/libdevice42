// Code generated by go-swagger; DO NOT EDIT.

package telco_circuits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/poroping/libdevice42/models"
)

// GetCircuitsReader is a Reader for the GetCircuits structure.
type GetCircuitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCircuitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCircuitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCircuitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCircuitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCircuitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCircuitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetCircuitsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 410:
		result := NewGetCircuitsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCircuitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetCircuitsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCircuitsOK creates a GetCircuitsOK with default headers values
func NewGetCircuitsOK() *GetCircuitsOK {
	return &GetCircuitsOK{}
}

/*GetCircuitsOK handles this case with default header values.

The above command returns results like this:
*/
type GetCircuitsOK struct {
	Payload *GetCircuitsOKBody
}

func (o *GetCircuitsOK) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsOK  %+v", 200, o.Payload)
}

func (o *GetCircuitsOK) GetPayload() *GetCircuitsOKBody {
	return o.Payload
}

func (o *GetCircuitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCircuitsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCircuitsBadRequest creates a GetCircuitsBadRequest with default headers values
func NewGetCircuitsBadRequest() *GetCircuitsBadRequest {
	return &GetCircuitsBadRequest{}
}

/*GetCircuitsBadRequest handles this case with default header values.

Bad Request (A validation exception has occurred.)
*/
type GetCircuitsBadRequest struct {
}

func (o *GetCircuitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsBadRequest ", 400)
}

func (o *GetCircuitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsUnauthorized creates a GetCircuitsUnauthorized with default headers values
func NewGetCircuitsUnauthorized() *GetCircuitsUnauthorized {
	return &GetCircuitsUnauthorized{}
}

/*GetCircuitsUnauthorized handles this case with default header values.

Unauthorized (Your credentials suck)
*/
type GetCircuitsUnauthorized struct {
}

func (o *GetCircuitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsUnauthorized ", 401)
}

func (o *GetCircuitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsForbidden creates a GetCircuitsForbidden with default headers values
func NewGetCircuitsForbidden() *GetCircuitsForbidden {
	return &GetCircuitsForbidden{}
}

/*GetCircuitsForbidden handles this case with default header values.

Forbidden (The resource requested is hidden)
*/
type GetCircuitsForbidden struct {
}

func (o *GetCircuitsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsForbidden ", 403)
}

func (o *GetCircuitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsNotFound creates a GetCircuitsNotFound with default headers values
func NewGetCircuitsNotFound() *GetCircuitsNotFound {
	return &GetCircuitsNotFound{}
}

/*GetCircuitsNotFound handles this case with default header values.

Not Found (The specified resource could not be found)
*/
type GetCircuitsNotFound struct {
}

func (o *GetCircuitsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsNotFound ", 404)
}

func (o *GetCircuitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsMethodNotAllowed creates a GetCircuitsMethodNotAllowed with default headers values
func NewGetCircuitsMethodNotAllowed() *GetCircuitsMethodNotAllowed {
	return &GetCircuitsMethodNotAllowed{}
}

/*GetCircuitsMethodNotAllowed handles this case with default header values.

Method Not Allowed (You tried to access a resource with an invalid method)
*/
type GetCircuitsMethodNotAllowed struct {
}

func (o *GetCircuitsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsMethodNotAllowed ", 405)
}

func (o *GetCircuitsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsGone creates a GetCircuitsGone with default headers values
func NewGetCircuitsGone() *GetCircuitsGone {
	return &GetCircuitsGone{}
}

/*GetCircuitsGone handles this case with default header values.

Gone (The resource requested has been removed from our servers)
*/
type GetCircuitsGone struct {
}

func (o *GetCircuitsGone) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsGone ", 410)
}

func (o *GetCircuitsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsInternalServerError creates a GetCircuitsInternalServerError with default headers values
func NewGetCircuitsInternalServerError() *GetCircuitsInternalServerError {
	return &GetCircuitsInternalServerError{}
}

/*GetCircuitsInternalServerError handles this case with default header values.

Internal Server Error (Some parameter missing or issue with the server. Check with returned “msg” from the call.)
*/
type GetCircuitsInternalServerError struct {
}

func (o *GetCircuitsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsInternalServerError ", 500)
}

func (o *GetCircuitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCircuitsServiceUnavailable creates a GetCircuitsServiceUnavailable with default headers values
func NewGetCircuitsServiceUnavailable() *GetCircuitsServiceUnavailable {
	return &GetCircuitsServiceUnavailable{}
}

/*GetCircuitsServiceUnavailable handles this case with default header values.

Service Unavailable (Please check if your Device42 instance is working normally.)
*/
type GetCircuitsServiceUnavailable struct {
}

func (o *GetCircuitsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /api/1.0/circuits/][%d] getCircuitsServiceUnavailable ", 503)
}

func (o *GetCircuitsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetCircuitsOKBody get circuits o k body
swagger:model GetCircuitsOKBody
*/
type GetCircuitsOKBody struct {

	// circuits
	Circuits []*models.GetAllCircuits `json:"circuits"`
}

// Validate validates this get circuits o k body
func (o *GetCircuitsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCircuits(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCircuitsOKBody) validateCircuits(formats strfmt.Registry) error {

	if swag.IsZero(o.Circuits) { // not required
		return nil
	}

	for i := 0; i < len(o.Circuits); i++ {
		if swag.IsZero(o.Circuits[i]) { // not required
			continue
		}

		if o.Circuits[i] != nil {
			if err := o.Circuits[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getCircuitsOK" + "." + "circuits" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCircuitsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCircuitsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCircuitsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
